// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.SearchView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.LineChart;
import com.github.mikephil.charting.charts.PieChart;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRetailerBillBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnFilter;

  @NonNull
  public final ProgressBar idPbar;

  @NonNull
  public final ProgressBar idPbar1;

  @NonNull
  public final ProgressBar idPbarMain;

  @NonNull
  public final LineChart lineChart;

  @NonNull
  public final RelativeLayout llCompleteStatus;

  @NonNull
  public final LinearLayout llSearch;

  @NonNull
  public final DashboardRecyclerviewBinding myDashboardBillsListItemsRecyclerviewInclude;

  @NonNull
  public final RelativeLayout myEntryLayout;

  @NonNull
  public final RelativeLayout myToolbarLayout;

  @NonNull
  public final NestedScrollView nestedScreen;

  @NonNull
  public final PieChart pieBills;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RelativeLayout rlCharts;

  @NonNull
  public final RelativeLayout rlHome;

  @NonNull
  public final RelativeLayout rlMain;

  @NonNull
  public final RelativeLayout rlMonthList;

  @NonNull
  public final RelativeLayout rlPiechart;

  @NonNull
  public final RelativeLayout rlSearchBar;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final DashboardRecyclerviewBinding statusDataRecyclerviewInclude;

  @NonNull
  public final TextView tvBillsHeader;

  @NonNull
  public final TextView tvShowingEnteries;

  @NonNull
  public final View viewLine;

  private FragmentRetailerBillBinding(@NonNull NestedScrollView rootView, @NonNull Button btnFilter,
      @NonNull ProgressBar idPbar, @NonNull ProgressBar idPbar1, @NonNull ProgressBar idPbarMain,
      @NonNull LineChart lineChart, @NonNull RelativeLayout llCompleteStatus,
      @NonNull LinearLayout llSearch,
      @NonNull DashboardRecyclerviewBinding myDashboardBillsListItemsRecyclerviewInclude,
      @NonNull RelativeLayout myEntryLayout, @NonNull RelativeLayout myToolbarLayout,
      @NonNull NestedScrollView nestedScreen, @NonNull PieChart pieBills,
      @NonNull ProgressBar progressBar, @NonNull RelativeLayout rlCharts,
      @NonNull RelativeLayout rlHome, @NonNull RelativeLayout rlMain,
      @NonNull RelativeLayout rlMonthList, @NonNull RelativeLayout rlPiechart,
      @NonNull RelativeLayout rlSearchBar, @NonNull SearchView searchView,
      @NonNull DashboardRecyclerviewBinding statusDataRecyclerviewInclude,
      @NonNull TextView tvBillsHeader, @NonNull TextView tvShowingEnteries,
      @NonNull View viewLine) {
    this.rootView = rootView;
    this.btnFilter = btnFilter;
    this.idPbar = idPbar;
    this.idPbar1 = idPbar1;
    this.idPbarMain = idPbarMain;
    this.lineChart = lineChart;
    this.llCompleteStatus = llCompleteStatus;
    this.llSearch = llSearch;
    this.myDashboardBillsListItemsRecyclerviewInclude = myDashboardBillsListItemsRecyclerviewInclude;
    this.myEntryLayout = myEntryLayout;
    this.myToolbarLayout = myToolbarLayout;
    this.nestedScreen = nestedScreen;
    this.pieBills = pieBills;
    this.progressBar = progressBar;
    this.rlCharts = rlCharts;
    this.rlHome = rlHome;
    this.rlMain = rlMain;
    this.rlMonthList = rlMonthList;
    this.rlPiechart = rlPiechart;
    this.rlSearchBar = rlSearchBar;
    this.searchView = searchView;
    this.statusDataRecyclerviewInclude = statusDataRecyclerviewInclude;
    this.tvBillsHeader = tvBillsHeader;
    this.tvShowingEnteries = tvShowingEnteries;
    this.viewLine = viewLine;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRetailerBillBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRetailerBillBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_retailer_bill, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRetailerBillBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_filter;
      Button btnFilter = ViewBindings.findChildViewById(rootView, id);
      if (btnFilter == null) {
        break missingId;
      }

      id = R.id.id_pbar;
      ProgressBar idPbar = ViewBindings.findChildViewById(rootView, id);
      if (idPbar == null) {
        break missingId;
      }

      id = R.id.id_pbar1;
      ProgressBar idPbar1 = ViewBindings.findChildViewById(rootView, id);
      if (idPbar1 == null) {
        break missingId;
      }

      id = R.id.id_pbarMain;
      ProgressBar idPbarMain = ViewBindings.findChildViewById(rootView, id);
      if (idPbarMain == null) {
        break missingId;
      }

      id = R.id.lineChart;
      LineChart lineChart = ViewBindings.findChildViewById(rootView, id);
      if (lineChart == null) {
        break missingId;
      }

      id = R.id.ll_complete_status;
      RelativeLayout llCompleteStatus = ViewBindings.findChildViewById(rootView, id);
      if (llCompleteStatus == null) {
        break missingId;
      }

      id = R.id.ll_search;
      LinearLayout llSearch = ViewBindings.findChildViewById(rootView, id);
      if (llSearch == null) {
        break missingId;
      }

      id = R.id.my_dashboard_bills_list_items_recyclerview_include;
      View myDashboardBillsListItemsRecyclerviewInclude = ViewBindings.findChildViewById(rootView, id);
      if (myDashboardBillsListItemsRecyclerviewInclude == null) {
        break missingId;
      }
      DashboardRecyclerviewBinding binding_myDashboardBillsListItemsRecyclerviewInclude = DashboardRecyclerviewBinding.bind(myDashboardBillsListItemsRecyclerviewInclude);

      id = R.id.my_entry_layout;
      RelativeLayout myEntryLayout = ViewBindings.findChildViewById(rootView, id);
      if (myEntryLayout == null) {
        break missingId;
      }

      id = R.id.my_toolbar_layout;
      RelativeLayout myToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (myToolbarLayout == null) {
        break missingId;
      }

      NestedScrollView nestedScreen = (NestedScrollView) rootView;

      id = R.id.pie_bills;
      PieChart pieBills = ViewBindings.findChildViewById(rootView, id);
      if (pieBills == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rl_charts;
      RelativeLayout rlCharts = ViewBindings.findChildViewById(rootView, id);
      if (rlCharts == null) {
        break missingId;
      }

      id = R.id.rlHome;
      RelativeLayout rlHome = ViewBindings.findChildViewById(rootView, id);
      if (rlHome == null) {
        break missingId;
      }

      id = R.id.rlMain;
      RelativeLayout rlMain = ViewBindings.findChildViewById(rootView, id);
      if (rlMain == null) {
        break missingId;
      }

      id = R.id.rl_month_list;
      RelativeLayout rlMonthList = ViewBindings.findChildViewById(rootView, id);
      if (rlMonthList == null) {
        break missingId;
      }

      id = R.id.rl_piechart;
      RelativeLayout rlPiechart = ViewBindings.findChildViewById(rootView, id);
      if (rlPiechart == null) {
        break missingId;
      }

      id = R.id.rlSearchBar;
      RelativeLayout rlSearchBar = ViewBindings.findChildViewById(rootView, id);
      if (rlSearchBar == null) {
        break missingId;
      }

      id = R.id.search_view;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.status_data_recyclerview_include;
      View statusDataRecyclerviewInclude = ViewBindings.findChildViewById(rootView, id);
      if (statusDataRecyclerviewInclude == null) {
        break missingId;
      }
      DashboardRecyclerviewBinding binding_statusDataRecyclerviewInclude = DashboardRecyclerviewBinding.bind(statusDataRecyclerviewInclude);

      id = R.id.tvBillsHeader;
      TextView tvBillsHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvBillsHeader == null) {
        break missingId;
      }

      id = R.id.tv_showing_enteries;
      TextView tvShowingEnteries = ViewBindings.findChildViewById(rootView, id);
      if (tvShowingEnteries == null) {
        break missingId;
      }

      id = R.id.view_line;
      View viewLine = ViewBindings.findChildViewById(rootView, id);
      if (viewLine == null) {
        break missingId;
      }

      return new FragmentRetailerBillBinding((NestedScrollView) rootView, btnFilter, idPbar,
          idPbar1, idPbarMain, lineChart, llCompleteStatus, llSearch,
          binding_myDashboardBillsListItemsRecyclerviewInclude, myEntryLayout, myToolbarLayout,
          nestedScreen, pieBills, progressBar, rlCharts, rlHome, rlMain, rlMonthList, rlPiechart,
          rlSearchBar, searchView, binding_statusDataRecyclerviewInclude, tvBillsHeader,
          tvShowingEnteries, viewLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
