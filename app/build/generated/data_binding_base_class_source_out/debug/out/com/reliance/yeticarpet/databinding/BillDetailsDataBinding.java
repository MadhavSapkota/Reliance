// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BillDetailsDataBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout rlCalio;

  @NonNull
  public final RelativeLayout rlCalioo;

  @NonNull
  public final TextView tvCalio;

  @NonNull
  public final TextView tvCalioPrice;

  @NonNull
  public final TextView tvItemName;

  @NonNull
  public final View viewLine;

  @NonNull
  public final View viewLinem;

  private BillDetailsDataBinding(@NonNull LinearLayout rootView, @NonNull RelativeLayout rlCalio,
      @NonNull RelativeLayout rlCalioo, @NonNull TextView tvCalio, @NonNull TextView tvCalioPrice,
      @NonNull TextView tvItemName, @NonNull View viewLine, @NonNull View viewLinem) {
    this.rootView = rootView;
    this.rlCalio = rlCalio;
    this.rlCalioo = rlCalioo;
    this.tvCalio = tvCalio;
    this.tvCalioPrice = tvCalioPrice;
    this.tvItemName = tvItemName;
    this.viewLine = viewLine;
    this.viewLinem = viewLinem;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BillDetailsDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BillDetailsDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bill_details_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BillDetailsDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rl_calio;
      RelativeLayout rlCalio = ViewBindings.findChildViewById(rootView, id);
      if (rlCalio == null) {
        break missingId;
      }

      id = R.id.rl_calioo;
      RelativeLayout rlCalioo = ViewBindings.findChildViewById(rootView, id);
      if (rlCalioo == null) {
        break missingId;
      }

      id = R.id.tv_calio;
      TextView tvCalio = ViewBindings.findChildViewById(rootView, id);
      if (tvCalio == null) {
        break missingId;
      }

      id = R.id.tv_calio_price;
      TextView tvCalioPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvCalioPrice == null) {
        break missingId;
      }

      id = R.id.tv_itemName;
      TextView tvItemName = ViewBindings.findChildViewById(rootView, id);
      if (tvItemName == null) {
        break missingId;
      }

      id = R.id.view_line;
      View viewLine = ViewBindings.findChildViewById(rootView, id);
      if (viewLine == null) {
        break missingId;
      }

      id = R.id.view_linem;
      View viewLinem = ViewBindings.findChildViewById(rootView, id);
      if (viewLinem == null) {
        break missingId;
      }

      return new BillDetailsDataBinding((LinearLayout) rootView, rlCalio, rlCalioo, tvCalio,
          tvCalioPrice, tvItemName, viewLine, viewLinem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
