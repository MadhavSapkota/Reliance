// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.SearchView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PartyListActivityBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnAll;

  @NonNull
  public final Button btnComplete;

  @NonNull
  public final Button btnPending;

  @NonNull
  public final ImageView ivForward;

  @NonNull
  public final RelativeLayout ivForwardButton;

  @NonNull
  public final RelativeLayout llCompleteStatus;

  @NonNull
  public final LinearLayout llSearch;

  @NonNull
  public final DashboardRecyclerviewBinding myDashboardBillsListItemsRecyclerviewInclude;

  @NonNull
  public final RelativeLayout myEntryLayout;

  @NonNull
  public final RelativeLayout myToolbarLayout;

  @NonNull
  public final NestedScrollView nestedScreen;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RelativeLayout rlMain;

  @NonNull
  public final RelativeLayout rlSearchBar;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final TextView tvBillsHeader;

  @NonNull
  public final TextView tvShowingEnteries;

  private PartyListActivityBinding(@NonNull NestedScrollView rootView, @NonNull Button btnAll,
      @NonNull Button btnComplete, @NonNull Button btnPending, @NonNull ImageView ivForward,
      @NonNull RelativeLayout ivForwardButton, @NonNull RelativeLayout llCompleteStatus,
      @NonNull LinearLayout llSearch,
      @NonNull DashboardRecyclerviewBinding myDashboardBillsListItemsRecyclerviewInclude,
      @NonNull RelativeLayout myEntryLayout, @NonNull RelativeLayout myToolbarLayout,
      @NonNull NestedScrollView nestedScreen, @NonNull ProgressBar progressBar,
      @NonNull RelativeLayout rlMain, @NonNull RelativeLayout rlSearchBar,
      @NonNull SearchView searchView, @NonNull TextView tvBillsHeader,
      @NonNull TextView tvShowingEnteries) {
    this.rootView = rootView;
    this.btnAll = btnAll;
    this.btnComplete = btnComplete;
    this.btnPending = btnPending;
    this.ivForward = ivForward;
    this.ivForwardButton = ivForwardButton;
    this.llCompleteStatus = llCompleteStatus;
    this.llSearch = llSearch;
    this.myDashboardBillsListItemsRecyclerviewInclude = myDashboardBillsListItemsRecyclerviewInclude;
    this.myEntryLayout = myEntryLayout;
    this.myToolbarLayout = myToolbarLayout;
    this.nestedScreen = nestedScreen;
    this.progressBar = progressBar;
    this.rlMain = rlMain;
    this.rlSearchBar = rlSearchBar;
    this.searchView = searchView;
    this.tvBillsHeader = tvBillsHeader;
    this.tvShowingEnteries = tvShowingEnteries;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static PartyListActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PartyListActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.party_list_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PartyListActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_all;
      Button btnAll = ViewBindings.findChildViewById(rootView, id);
      if (btnAll == null) {
        break missingId;
      }

      id = R.id.btn_complete;
      Button btnComplete = ViewBindings.findChildViewById(rootView, id);
      if (btnComplete == null) {
        break missingId;
      }

      id = R.id.btn_pending;
      Button btnPending = ViewBindings.findChildViewById(rootView, id);
      if (btnPending == null) {
        break missingId;
      }

      id = R.id.ivForward;
      ImageView ivForward = ViewBindings.findChildViewById(rootView, id);
      if (ivForward == null) {
        break missingId;
      }

      id = R.id.ivForwardButton;
      RelativeLayout ivForwardButton = ViewBindings.findChildViewById(rootView, id);
      if (ivForwardButton == null) {
        break missingId;
      }

      id = R.id.ll_complete_status;
      RelativeLayout llCompleteStatus = ViewBindings.findChildViewById(rootView, id);
      if (llCompleteStatus == null) {
        break missingId;
      }

      id = R.id.ll_search;
      LinearLayout llSearch = ViewBindings.findChildViewById(rootView, id);
      if (llSearch == null) {
        break missingId;
      }

      id = R.id.my_dashboard_bills_list_items_recyclerview_include;
      View myDashboardBillsListItemsRecyclerviewInclude = ViewBindings.findChildViewById(rootView, id);
      if (myDashboardBillsListItemsRecyclerviewInclude == null) {
        break missingId;
      }
      DashboardRecyclerviewBinding binding_myDashboardBillsListItemsRecyclerviewInclude = DashboardRecyclerviewBinding.bind(myDashboardBillsListItemsRecyclerviewInclude);

      id = R.id.my_entry_layout;
      RelativeLayout myEntryLayout = ViewBindings.findChildViewById(rootView, id);
      if (myEntryLayout == null) {
        break missingId;
      }

      id = R.id.my_toolbar_layout;
      RelativeLayout myToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (myToolbarLayout == null) {
        break missingId;
      }

      NestedScrollView nestedScreen = (NestedScrollView) rootView;

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rlMain;
      RelativeLayout rlMain = ViewBindings.findChildViewById(rootView, id);
      if (rlMain == null) {
        break missingId;
      }

      id = R.id.rlSearchBar;
      RelativeLayout rlSearchBar = ViewBindings.findChildViewById(rootView, id);
      if (rlSearchBar == null) {
        break missingId;
      }

      id = R.id.search_view;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.tvBillsHeader;
      TextView tvBillsHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvBillsHeader == null) {
        break missingId;
      }

      id = R.id.tv_showing_enteries;
      TextView tvShowingEnteries = ViewBindings.findChildViewById(rootView, id);
      if (tvShowingEnteries == null) {
        break missingId;
      }

      return new PartyListActivityBinding((NestedScrollView) rootView, btnAll, btnComplete,
          btnPending, ivForward, ivForwardButton, llCompleteStatus, llSearch,
          binding_myDashboardBillsListItemsRecyclerviewInclude, myEntryLayout, myToolbarLayout,
          nestedScreen, progressBar, rlMain, rlSearchBar, searchView, tvBillsHeader,
          tvShowingEnteries);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
