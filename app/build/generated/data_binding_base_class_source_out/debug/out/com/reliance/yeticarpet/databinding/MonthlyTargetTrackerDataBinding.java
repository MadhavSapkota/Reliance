// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MonthlyTargetTrackerDataBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView coilMatTextView;

  @NonNull
  public final RelativeLayout rlCoilMat;

  @NonNull
  public final RelativeLayout rlCurrentAverageMonthly;

  @NonNull
  public final RelativeLayout rlRequiredAveragePurchase;

  @NonNull
  public final TextView tVRs;

  @NonNull
  public final TextView tvCurrentAveragePurchase;

  @NonNull
  public final TextView tvCurrentMonthPurchase;

  @NonNull
  public final TextView tvRequiredAveragePurchase;

  @NonNull
  public final TextView tvRequiredCurrentPurchase;

  @NonNull
  public final TextView tvRs;

  @NonNull
  public final View view;

  @NonNull
  public final View viewLine1;

  private MonthlyTargetTrackerDataBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView coilMatTextView, @NonNull RelativeLayout rlCoilMat,
      @NonNull RelativeLayout rlCurrentAverageMonthly,
      @NonNull RelativeLayout rlRequiredAveragePurchase, @NonNull TextView tVRs,
      @NonNull TextView tvCurrentAveragePurchase, @NonNull TextView tvCurrentMonthPurchase,
      @NonNull TextView tvRequiredAveragePurchase, @NonNull TextView tvRequiredCurrentPurchase,
      @NonNull TextView tvRs, @NonNull View view, @NonNull View viewLine1) {
    this.rootView = rootView;
    this.coilMatTextView = coilMatTextView;
    this.rlCoilMat = rlCoilMat;
    this.rlCurrentAverageMonthly = rlCurrentAverageMonthly;
    this.rlRequiredAveragePurchase = rlRequiredAveragePurchase;
    this.tVRs = tVRs;
    this.tvCurrentAveragePurchase = tvCurrentAveragePurchase;
    this.tvCurrentMonthPurchase = tvCurrentMonthPurchase;
    this.tvRequiredAveragePurchase = tvRequiredAveragePurchase;
    this.tvRequiredCurrentPurchase = tvRequiredCurrentPurchase;
    this.tvRs = tvRs;
    this.view = view;
    this.viewLine1 = viewLine1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MonthlyTargetTrackerDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MonthlyTargetTrackerDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.monthly_target_tracker_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MonthlyTargetTrackerDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.coilMatTextView;
      TextView coilMatTextView = ViewBindings.findChildViewById(rootView, id);
      if (coilMatTextView == null) {
        break missingId;
      }

      id = R.id.rlCoilMat;
      RelativeLayout rlCoilMat = ViewBindings.findChildViewById(rootView, id);
      if (rlCoilMat == null) {
        break missingId;
      }

      id = R.id.rlCurrentAverageMonthly;
      RelativeLayout rlCurrentAverageMonthly = ViewBindings.findChildViewById(rootView, id);
      if (rlCurrentAverageMonthly == null) {
        break missingId;
      }

      id = R.id.rlRequiredAveragePurchase;
      RelativeLayout rlRequiredAveragePurchase = ViewBindings.findChildViewById(rootView, id);
      if (rlRequiredAveragePurchase == null) {
        break missingId;
      }

      id = R.id.tVRs;
      TextView tVRs = ViewBindings.findChildViewById(rootView, id);
      if (tVRs == null) {
        break missingId;
      }

      id = R.id.tvCurrentAveragePurchase;
      TextView tvCurrentAveragePurchase = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentAveragePurchase == null) {
        break missingId;
      }

      id = R.id.tvCurrentMonthPurchase;
      TextView tvCurrentMonthPurchase = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentMonthPurchase == null) {
        break missingId;
      }

      id = R.id.tvRequiredAveragePurchase;
      TextView tvRequiredAveragePurchase = ViewBindings.findChildViewById(rootView, id);
      if (tvRequiredAveragePurchase == null) {
        break missingId;
      }

      id = R.id.tvRequiredCurrentPurchase;
      TextView tvRequiredCurrentPurchase = ViewBindings.findChildViewById(rootView, id);
      if (tvRequiredCurrentPurchase == null) {
        break missingId;
      }

      id = R.id.tvRs;
      TextView tvRs = ViewBindings.findChildViewById(rootView, id);
      if (tvRs == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view_line1;
      View viewLine1 = ViewBindings.findChildViewById(rootView, id);
      if (viewLine1 == null) {
        break missingId;
      }

      return new MonthlyTargetTrackerDataBinding((RelativeLayout) rootView, coilMatTextView,
          rlCoilMat, rlCurrentAverageMonthly, rlRequiredAveragePurchase, tVRs,
          tvCurrentAveragePurchase, tvCurrentMonthPurchase, tvRequiredAveragePurchase,
          tvRequiredCurrentPurchase, tvRs, view, viewLine1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
