// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainFragmentDistributorLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout drawerLayout;

  @NonNull
  public final ProgressBar idPbar;

  @NonNull
  public final FragmentDashboardDistributorBinding inDashboard;

  @NonNull
  public final RelativeLayout rlMain;

  private MainFragmentDistributorLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout drawerLayout, @NonNull ProgressBar idPbar,
      @NonNull FragmentDashboardDistributorBinding inDashboard, @NonNull RelativeLayout rlMain) {
    this.rootView = rootView;
    this.drawerLayout = drawerLayout;
    this.idPbar = idPbar;
    this.inDashboard = inDashboard;
    this.rlMain = rlMain;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainFragmentDistributorLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainFragmentDistributorLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_fragment_distributor_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainFragmentDistributorLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout drawerLayout = (RelativeLayout) rootView;

      id = R.id.id_pbar;
      ProgressBar idPbar = ViewBindings.findChildViewById(rootView, id);
      if (idPbar == null) {
        break missingId;
      }

      id = R.id.inDashboard;
      View inDashboard = ViewBindings.findChildViewById(rootView, id);
      if (inDashboard == null) {
        break missingId;
      }
      FragmentDashboardDistributorBinding binding_inDashboard = FragmentDashboardDistributorBinding.bind(inDashboard);

      id = R.id.rlMain;
      RelativeLayout rlMain = ViewBindings.findChildViewById(rootView, id);
      if (rlMain == null) {
        break missingId;
      }

      return new MainFragmentDistributorLayoutBinding((RelativeLayout) rootView, drawerLayout,
          idPbar, binding_inDashboard, rlMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
