// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NepaliDatePickerLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnOk;

  @NonNull
  public final LinearLayout llPicker;

  @NonNull
  public final Spinner spDay;

  @NonNull
  public final Spinner spMonth;

  @NonNull
  public final Spinner spYear;

  private NepaliDatePickerLayoutBinding(@NonNull LinearLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnOk, @NonNull LinearLayout llPicker, @NonNull Spinner spDay,
      @NonNull Spinner spMonth, @NonNull Spinner spYear) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnOk = btnOk;
    this.llPicker = llPicker;
    this.spDay = spDay;
    this.spMonth = spMonth;
    this.spYear = spYear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NepaliDatePickerLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NepaliDatePickerLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nepali_date_picker_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NepaliDatePickerLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_ok;
      Button btnOk = ViewBindings.findChildViewById(rootView, id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.llPicker;
      LinearLayout llPicker = ViewBindings.findChildViewById(rootView, id);
      if (llPicker == null) {
        break missingId;
      }

      id = R.id.spDay;
      Spinner spDay = ViewBindings.findChildViewById(rootView, id);
      if (spDay == null) {
        break missingId;
      }

      id = R.id.spMonth;
      Spinner spMonth = ViewBindings.findChildViewById(rootView, id);
      if (spMonth == null) {
        break missingId;
      }

      id = R.id.spYear;
      Spinner spYear = ViewBindings.findChildViewById(rootView, id);
      if (spYear == null) {
        break missingId;
      }

      return new NepaliDatePickerLayoutBinding((LinearLayout) rootView, btnCancel, btnOk, llPicker,
          spDay, spMonth, spYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
