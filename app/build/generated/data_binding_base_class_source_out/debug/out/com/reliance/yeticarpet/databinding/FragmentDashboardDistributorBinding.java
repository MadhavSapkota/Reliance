// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.LineChart;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardDistributorBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final DashboardRecyclerviewBinding distributorDashboardRetailerListItemsRecyclerviewInclude;

  @NonNull
  public final DistributorLayoutTranscationsBinding inDashboard;

  @NonNull
  public final LineChart lineChart;

  @NonNull
  public final DashboardRecyclerviewBinding monthDataRecyclerviewInclude;

  @NonNull
  public final DashboardRecyclerviewBinding monthlyCategoryRecyclerviewInclude;

  @NonNull
  public final RelativeLayout myToolbarLayout;

  @NonNull
  public final RelativeLayout rlChartDescription;

  @NonNull
  public final RelativeLayout rlChartHorizontalCategory;

  @NonNull
  public final RelativeLayout rlCharts;

  @NonNull
  public final RelativeLayout rlDashboardLayout;

  @NonNull
  public final RelativeLayout rlMain;

  @NonNull
  public final RelativeLayout rlMonthList;

  @NonNull
  public final TextView rlMonthlySales;

  @NonNull
  public final RelativeLayout rlMonthlyTargetTracker;

  @NonNull
  public final RelativeLayout rlTopRetailers;

  @NonNull
  public final RelativeLayout rlTopRetailersBar;

  @NonNull
  public final RelativeLayout rlTopRetailersList;

  @NonNull
  public final TextView tvDistributorHello;

  @NonNull
  public final TextView tvDistributorName;

  @NonNull
  public final TextView tvMonthlySalesCost;

  @NonNull
  public final TextView tvTopRetailer;

  private FragmentDashboardDistributorBinding(@NonNull NestedScrollView rootView,
      @NonNull DashboardRecyclerviewBinding distributorDashboardRetailerListItemsRecyclerviewInclude,
      @NonNull DistributorLayoutTranscationsBinding inDashboard, @NonNull LineChart lineChart,
      @NonNull DashboardRecyclerviewBinding monthDataRecyclerviewInclude,
      @NonNull DashboardRecyclerviewBinding monthlyCategoryRecyclerviewInclude,
      @NonNull RelativeLayout myToolbarLayout, @NonNull RelativeLayout rlChartDescription,
      @NonNull RelativeLayout rlChartHorizontalCategory, @NonNull RelativeLayout rlCharts,
      @NonNull RelativeLayout rlDashboardLayout, @NonNull RelativeLayout rlMain,
      @NonNull RelativeLayout rlMonthList, @NonNull TextView rlMonthlySales,
      @NonNull RelativeLayout rlMonthlyTargetTracker, @NonNull RelativeLayout rlTopRetailers,
      @NonNull RelativeLayout rlTopRetailersBar, @NonNull RelativeLayout rlTopRetailersList,
      @NonNull TextView tvDistributorHello, @NonNull TextView tvDistributorName,
      @NonNull TextView tvMonthlySalesCost, @NonNull TextView tvTopRetailer) {
    this.rootView = rootView;
    this.distributorDashboardRetailerListItemsRecyclerviewInclude = distributorDashboardRetailerListItemsRecyclerviewInclude;
    this.inDashboard = inDashboard;
    this.lineChart = lineChart;
    this.monthDataRecyclerviewInclude = monthDataRecyclerviewInclude;
    this.monthlyCategoryRecyclerviewInclude = monthlyCategoryRecyclerviewInclude;
    this.myToolbarLayout = myToolbarLayout;
    this.rlChartDescription = rlChartDescription;
    this.rlChartHorizontalCategory = rlChartHorizontalCategory;
    this.rlCharts = rlCharts;
    this.rlDashboardLayout = rlDashboardLayout;
    this.rlMain = rlMain;
    this.rlMonthList = rlMonthList;
    this.rlMonthlySales = rlMonthlySales;
    this.rlMonthlyTargetTracker = rlMonthlyTargetTracker;
    this.rlTopRetailers = rlTopRetailers;
    this.rlTopRetailersBar = rlTopRetailersBar;
    this.rlTopRetailersList = rlTopRetailersList;
    this.tvDistributorHello = tvDistributorHello;
    this.tvDistributorName = tvDistributorName;
    this.tvMonthlySalesCost = tvMonthlySalesCost;
    this.tvTopRetailer = tvTopRetailer;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardDistributorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardDistributorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard_distributor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardDistributorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.distributor_dashboard_retailer_list_items_recyclerview_include;
      View distributorDashboardRetailerListItemsRecyclerviewInclude = ViewBindings.findChildViewById(rootView, id);
      if (distributorDashboardRetailerListItemsRecyclerviewInclude == null) {
        break missingId;
      }
      DashboardRecyclerviewBinding binding_distributorDashboardRetailerListItemsRecyclerviewInclude = DashboardRecyclerviewBinding.bind(distributorDashboardRetailerListItemsRecyclerviewInclude);

      id = R.id.inDashboard;
      View inDashboard = ViewBindings.findChildViewById(rootView, id);
      if (inDashboard == null) {
        break missingId;
      }
      DistributorLayoutTranscationsBinding binding_inDashboard = DistributorLayoutTranscationsBinding.bind(inDashboard);

      id = R.id.lineChart;
      LineChart lineChart = ViewBindings.findChildViewById(rootView, id);
      if (lineChart == null) {
        break missingId;
      }

      id = R.id.month_data_recyclerview_include;
      View monthDataRecyclerviewInclude = ViewBindings.findChildViewById(rootView, id);
      if (monthDataRecyclerviewInclude == null) {
        break missingId;
      }
      DashboardRecyclerviewBinding binding_monthDataRecyclerviewInclude = DashboardRecyclerviewBinding.bind(monthDataRecyclerviewInclude);

      id = R.id.monthly_category_recyclerview_include;
      View monthlyCategoryRecyclerviewInclude = ViewBindings.findChildViewById(rootView, id);
      if (monthlyCategoryRecyclerviewInclude == null) {
        break missingId;
      }
      DashboardRecyclerviewBinding binding_monthlyCategoryRecyclerviewInclude = DashboardRecyclerviewBinding.bind(monthlyCategoryRecyclerviewInclude);

      id = R.id.my_toolbar_layout;
      RelativeLayout myToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (myToolbarLayout == null) {
        break missingId;
      }

      id = R.id.rlChartDescription;
      RelativeLayout rlChartDescription = ViewBindings.findChildViewById(rootView, id);
      if (rlChartDescription == null) {
        break missingId;
      }

      id = R.id.rl_chart_horizontal_category;
      RelativeLayout rlChartHorizontalCategory = ViewBindings.findChildViewById(rootView, id);
      if (rlChartHorizontalCategory == null) {
        break missingId;
      }

      id = R.id.rl_charts;
      RelativeLayout rlCharts = ViewBindings.findChildViewById(rootView, id);
      if (rlCharts == null) {
        break missingId;
      }

      id = R.id.rlDashboardLayout;
      RelativeLayout rlDashboardLayout = ViewBindings.findChildViewById(rootView, id);
      if (rlDashboardLayout == null) {
        break missingId;
      }

      id = R.id.rlMain;
      RelativeLayout rlMain = ViewBindings.findChildViewById(rootView, id);
      if (rlMain == null) {
        break missingId;
      }

      id = R.id.rl_month_list;
      RelativeLayout rlMonthList = ViewBindings.findChildViewById(rootView, id);
      if (rlMonthList == null) {
        break missingId;
      }

      id = R.id.rl_monthly_sales;
      TextView rlMonthlySales = ViewBindings.findChildViewById(rootView, id);
      if (rlMonthlySales == null) {
        break missingId;
      }

      id = R.id.rl_monthly_target_tracker;
      RelativeLayout rlMonthlyTargetTracker = ViewBindings.findChildViewById(rootView, id);
      if (rlMonthlyTargetTracker == null) {
        break missingId;
      }

      id = R.id.rlTopRetailers;
      RelativeLayout rlTopRetailers = ViewBindings.findChildViewById(rootView, id);
      if (rlTopRetailers == null) {
        break missingId;
      }

      id = R.id.rlTopRetailersBar;
      RelativeLayout rlTopRetailersBar = ViewBindings.findChildViewById(rootView, id);
      if (rlTopRetailersBar == null) {
        break missingId;
      }

      id = R.id.rlTopRetailersList;
      RelativeLayout rlTopRetailersList = ViewBindings.findChildViewById(rootView, id);
      if (rlTopRetailersList == null) {
        break missingId;
      }

      id = R.id.tv_distributor_hello;
      TextView tvDistributorHello = ViewBindings.findChildViewById(rootView, id);
      if (tvDistributorHello == null) {
        break missingId;
      }

      id = R.id.tv_distributor_name;
      TextView tvDistributorName = ViewBindings.findChildViewById(rootView, id);
      if (tvDistributorName == null) {
        break missingId;
      }

      id = R.id.tv_monthly_sales_cost;
      TextView tvMonthlySalesCost = ViewBindings.findChildViewById(rootView, id);
      if (tvMonthlySalesCost == null) {
        break missingId;
      }

      id = R.id.tvTopRetailer;
      TextView tvTopRetailer = ViewBindings.findChildViewById(rootView, id);
      if (tvTopRetailer == null) {
        break missingId;
      }

      return new FragmentDashboardDistributorBinding((NestedScrollView) rootView,
          binding_distributorDashboardRetailerListItemsRecyclerviewInclude, binding_inDashboard,
          lineChart, binding_monthDataRecyclerviewInclude,
          binding_monthlyCategoryRecyclerviewInclude, myToolbarLayout, rlChartDescription,
          rlChartHorizontalCategory, rlCharts, rlDashboardLayout, rlMain, rlMonthList,
          rlMonthlySales, rlMonthlyTargetTracker, rlTopRetailers, rlTopRetailersBar,
          rlTopRetailersList, tvDistributorHello, tvDistributorName, tvMonthlySalesCost,
          tvTopRetailer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
