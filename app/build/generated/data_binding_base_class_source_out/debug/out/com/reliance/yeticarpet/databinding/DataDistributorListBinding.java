// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DataDistributorListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout rlCard;

  @NonNull
  public final RelativeLayout rlTraderName;

  @NonNull
  public final TextView tvDistributorListName;

  @NonNull
  public final TextView tvDistributorRs;

  @NonNull
  public final TextView tvDistributorRsDigit;

  @NonNull
  public final View viewLine;

  private DataDistributorListBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout rlCard, @NonNull RelativeLayout rlTraderName,
      @NonNull TextView tvDistributorListName, @NonNull TextView tvDistributorRs,
      @NonNull TextView tvDistributorRsDigit, @NonNull View viewLine) {
    this.rootView = rootView;
    this.rlCard = rlCard;
    this.rlTraderName = rlTraderName;
    this.tvDistributorListName = tvDistributorListName;
    this.tvDistributorRs = tvDistributorRs;
    this.tvDistributorRsDigit = tvDistributorRsDigit;
    this.viewLine = viewLine;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DataDistributorListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DataDistributorListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.data_distributor_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DataDistributorListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rlCard;
      RelativeLayout rlCard = ViewBindings.findChildViewById(rootView, id);
      if (rlCard == null) {
        break missingId;
      }

      id = R.id.rlTraderName;
      RelativeLayout rlTraderName = ViewBindings.findChildViewById(rootView, id);
      if (rlTraderName == null) {
        break missingId;
      }

      id = R.id.tv_distributor_list_name;
      TextView tvDistributorListName = ViewBindings.findChildViewById(rootView, id);
      if (tvDistributorListName == null) {
        break missingId;
      }

      id = R.id.tv_distributor_rs;
      TextView tvDistributorRs = ViewBindings.findChildViewById(rootView, id);
      if (tvDistributorRs == null) {
        break missingId;
      }

      id = R.id.tv_distributor_rs_digit;
      TextView tvDistributorRsDigit = ViewBindings.findChildViewById(rootView, id);
      if (tvDistributorRsDigit == null) {
        break missingId;
      }

      id = R.id.view_line;
      View viewLine = ViewBindings.findChildViewById(rootView, id);
      if (viewLine == null) {
        break missingId;
      }

      return new DataDistributorListBinding((RelativeLayout) rootView, rlCard, rlTraderName,
          tvDistributorListName, tvDistributorRs, tvDistributorRsDigit, viewLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
