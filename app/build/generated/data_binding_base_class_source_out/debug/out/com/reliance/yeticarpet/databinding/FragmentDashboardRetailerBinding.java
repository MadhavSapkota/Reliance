// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.HorizontalBarChart;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardRetailerBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final CardView cardViewTotalScheme;

  @NonNull
  public final CardView cardViewTotalTranscations;

  @NonNull
  public final RelativeLayout dashboardRecyclerView;

  @NonNull
  public final BarGraphBinding graph;

  @NonNull
  public final HorizontalBarChart horizontalBarChart;

  @NonNull
  public final ImageView imageViewTotalScheme;

  @NonNull
  public final ImageView imageViewTranscationIcon;

  @NonNull
  public final RelativeLayout myToolbarLayout;

  @NonNull
  public final RelativeLayout rlRetailerTotalSchemeAmount;

  @NonNull
  public final RelativeLayout rlRetailerTransaction;

  @NonNull
  public final RelativeLayout rlRetailerTranscation;

  @NonNull
  public final RelativeLayout rlTotalScheme;

  @NonNull
  public final RelativeLayout rlTotalTransactions;

  @NonNull
  public final DashboardRecyclerviewBinding schemeGraph;

  @NonNull
  public final TextView tvBillNumber;

  @NonNull
  public final TextView tvBillsAmount;

  @NonNull
  public final TextView tvRetailerDashboardHeader;

  @NonNull
  public final TextView tvRetailerDashboardHeaderHello;

  @NonNull
  public final TextView tvSchemeAmount;

  @NonNull
  public final TextView tvTotalScheme;

  @NonNull
  public final TextView tvTranscationAmount;

  private FragmentDashboardRetailerBinding(@NonNull NestedScrollView rootView,
      @NonNull CardView cardViewTotalScheme, @NonNull CardView cardViewTotalTranscations,
      @NonNull RelativeLayout dashboardRecyclerView, @NonNull BarGraphBinding graph,
      @NonNull HorizontalBarChart horizontalBarChart, @NonNull ImageView imageViewTotalScheme,
      @NonNull ImageView imageViewTranscationIcon, @NonNull RelativeLayout myToolbarLayout,
      @NonNull RelativeLayout rlRetailerTotalSchemeAmount,
      @NonNull RelativeLayout rlRetailerTransaction, @NonNull RelativeLayout rlRetailerTranscation,
      @NonNull RelativeLayout rlTotalScheme, @NonNull RelativeLayout rlTotalTransactions,
      @NonNull DashboardRecyclerviewBinding schemeGraph, @NonNull TextView tvBillNumber,
      @NonNull TextView tvBillsAmount, @NonNull TextView tvRetailerDashboardHeader,
      @NonNull TextView tvRetailerDashboardHeaderHello, @NonNull TextView tvSchemeAmount,
      @NonNull TextView tvTotalScheme, @NonNull TextView tvTranscationAmount) {
    this.rootView = rootView;
    this.cardViewTotalScheme = cardViewTotalScheme;
    this.cardViewTotalTranscations = cardViewTotalTranscations;
    this.dashboardRecyclerView = dashboardRecyclerView;
    this.graph = graph;
    this.horizontalBarChart = horizontalBarChart;
    this.imageViewTotalScheme = imageViewTotalScheme;
    this.imageViewTranscationIcon = imageViewTranscationIcon;
    this.myToolbarLayout = myToolbarLayout;
    this.rlRetailerTotalSchemeAmount = rlRetailerTotalSchemeAmount;
    this.rlRetailerTransaction = rlRetailerTransaction;
    this.rlRetailerTranscation = rlRetailerTranscation;
    this.rlTotalScheme = rlTotalScheme;
    this.rlTotalTransactions = rlTotalTransactions;
    this.schemeGraph = schemeGraph;
    this.tvBillNumber = tvBillNumber;
    this.tvBillsAmount = tvBillsAmount;
    this.tvRetailerDashboardHeader = tvRetailerDashboardHeader;
    this.tvRetailerDashboardHeaderHello = tvRetailerDashboardHeaderHello;
    this.tvSchemeAmount = tvSchemeAmount;
    this.tvTotalScheme = tvTotalScheme;
    this.tvTranscationAmount = tvTranscationAmount;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardRetailerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardRetailerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard_retailer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardRetailerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view_total_scheme;
      CardView cardViewTotalScheme = ViewBindings.findChildViewById(rootView, id);
      if (cardViewTotalScheme == null) {
        break missingId;
      }

      id = R.id.card_view_total_transcations;
      CardView cardViewTotalTranscations = ViewBindings.findChildViewById(rootView, id);
      if (cardViewTotalTranscations == null) {
        break missingId;
      }

      id = R.id.dashboardRecyclerView;
      RelativeLayout dashboardRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (dashboardRecyclerView == null) {
        break missingId;
      }

      id = R.id.graph;
      View graph = ViewBindings.findChildViewById(rootView, id);
      if (graph == null) {
        break missingId;
      }
      BarGraphBinding binding_graph = BarGraphBinding.bind(graph);

      id = R.id.horizontalBarChart;
      HorizontalBarChart horizontalBarChart = ViewBindings.findChildViewById(rootView, id);
      if (horizontalBarChart == null) {
        break missingId;
      }

      id = R.id.imageView_total_scheme;
      ImageView imageViewTotalScheme = ViewBindings.findChildViewById(rootView, id);
      if (imageViewTotalScheme == null) {
        break missingId;
      }

      id = R.id.imageView_transcation_icon;
      ImageView imageViewTranscationIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewTranscationIcon == null) {
        break missingId;
      }

      id = R.id.my_toolbar_layout;
      RelativeLayout myToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (myToolbarLayout == null) {
        break missingId;
      }

      id = R.id.rl_retailer_total_scheme_amount;
      RelativeLayout rlRetailerTotalSchemeAmount = ViewBindings.findChildViewById(rootView, id);
      if (rlRetailerTotalSchemeAmount == null) {
        break missingId;
      }

      id = R.id.rl_retailer_transaction;
      RelativeLayout rlRetailerTransaction = ViewBindings.findChildViewById(rootView, id);
      if (rlRetailerTransaction == null) {
        break missingId;
      }

      id = R.id.rl_retailer_transcation;
      RelativeLayout rlRetailerTranscation = ViewBindings.findChildViewById(rootView, id);
      if (rlRetailerTranscation == null) {
        break missingId;
      }

      id = R.id.rl_total_scheme;
      RelativeLayout rlTotalScheme = ViewBindings.findChildViewById(rootView, id);
      if (rlTotalScheme == null) {
        break missingId;
      }

      id = R.id.rl_total_transactions;
      RelativeLayout rlTotalTransactions = ViewBindings.findChildViewById(rootView, id);
      if (rlTotalTransactions == null) {
        break missingId;
      }

      id = R.id.schemeGraph;
      View schemeGraph = ViewBindings.findChildViewById(rootView, id);
      if (schemeGraph == null) {
        break missingId;
      }
      DashboardRecyclerviewBinding binding_schemeGraph = DashboardRecyclerviewBinding.bind(schemeGraph);

      id = R.id.tv_bill_number;
      TextView tvBillNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvBillNumber == null) {
        break missingId;
      }

      id = R.id.tv_bills_amount;
      TextView tvBillsAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvBillsAmount == null) {
        break missingId;
      }

      id = R.id.tv_retailer_dashboard_header;
      TextView tvRetailerDashboardHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvRetailerDashboardHeader == null) {
        break missingId;
      }

      id = R.id.tv_retailer_dashboard_header_hello;
      TextView tvRetailerDashboardHeaderHello = ViewBindings.findChildViewById(rootView, id);
      if (tvRetailerDashboardHeaderHello == null) {
        break missingId;
      }

      id = R.id.tv_scheme_amount;
      TextView tvSchemeAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvSchemeAmount == null) {
        break missingId;
      }

      id = R.id.tv_total_scheme;
      TextView tvTotalScheme = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalScheme == null) {
        break missingId;
      }

      id = R.id.tv_transcation_amount;
      TextView tvTranscationAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvTranscationAmount == null) {
        break missingId;
      }

      return new FragmentDashboardRetailerBinding((NestedScrollView) rootView, cardViewTotalScheme,
          cardViewTotalTranscations, dashboardRecyclerView, binding_graph, horizontalBarChart,
          imageViewTotalScheme, imageViewTranscationIcon, myToolbarLayout,
          rlRetailerTotalSchemeAmount, rlRetailerTransaction, rlRetailerTranscation, rlTotalScheme,
          rlTotalTransactions, binding_schemeGraph, tvBillNumber, tvBillsAmount,
          tvRetailerDashboardHeader, tvRetailerDashboardHeaderHello, tvSchemeAmount, tvTotalScheme,
          tvTranscationAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
