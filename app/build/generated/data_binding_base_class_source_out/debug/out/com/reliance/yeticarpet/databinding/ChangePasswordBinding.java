// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChangePasswordBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView btnDiscard;

  @NonNull
  public final TextView btnLogin;

  @NonNull
  public final EditText etNewPassword;

  @NonNull
  public final EditText etOldPassword;

  @NonNull
  public final TextInputLayout etOldPasswordInput;

  @NonNull
  public final EditText etRePassword;

  @NonNull
  public final TextInputLayout etTextInput;

  @NonNull
  public final RelativeLayout myToolbarLayout;

  @NonNull
  public final RelativeLayout rlConfirmPassword;

  @NonNull
  public final RelativeLayout rlDiscard;

  @NonNull
  public final RelativeLayout rlOldPassword;

  @NonNull
  public final RelativeLayout rlOldPasswordTop;

  @NonNull
  public final RelativeLayout rlPassword;

  @NonNull
  public final RelativeLayout rlSubmit;

  @NonNull
  public final RelativeLayout rlTextField;

  @NonNull
  public final TextView tvAsterisk;

  @NonNull
  public final TextView tvBillsHeader;

  @NonNull
  public final TextView tvConfirmAsterisk;

  @NonNull
  public final TextView tvCpassword;

  @NonNull
  public final TextView tvLogin;

  @NonNull
  public final TextView tvOldPassword;

  @NonNull
  public final TextView tvOldPasswordAsterisk;

  @NonNull
  public final TextView tvPassword;

  private ChangePasswordBinding(@NonNull NestedScrollView rootView, @NonNull TextView btnDiscard,
      @NonNull TextView btnLogin, @NonNull EditText etNewPassword, @NonNull EditText etOldPassword,
      @NonNull TextInputLayout etOldPasswordInput, @NonNull EditText etRePassword,
      @NonNull TextInputLayout etTextInput, @NonNull RelativeLayout myToolbarLayout,
      @NonNull RelativeLayout rlConfirmPassword, @NonNull RelativeLayout rlDiscard,
      @NonNull RelativeLayout rlOldPassword, @NonNull RelativeLayout rlOldPasswordTop,
      @NonNull RelativeLayout rlPassword, @NonNull RelativeLayout rlSubmit,
      @NonNull RelativeLayout rlTextField, @NonNull TextView tvAsterisk,
      @NonNull TextView tvBillsHeader, @NonNull TextView tvConfirmAsterisk,
      @NonNull TextView tvCpassword, @NonNull TextView tvLogin, @NonNull TextView tvOldPassword,
      @NonNull TextView tvOldPasswordAsterisk, @NonNull TextView tvPassword) {
    this.rootView = rootView;
    this.btnDiscard = btnDiscard;
    this.btnLogin = btnLogin;
    this.etNewPassword = etNewPassword;
    this.etOldPassword = etOldPassword;
    this.etOldPasswordInput = etOldPasswordInput;
    this.etRePassword = etRePassword;
    this.etTextInput = etTextInput;
    this.myToolbarLayout = myToolbarLayout;
    this.rlConfirmPassword = rlConfirmPassword;
    this.rlDiscard = rlDiscard;
    this.rlOldPassword = rlOldPassword;
    this.rlOldPasswordTop = rlOldPasswordTop;
    this.rlPassword = rlPassword;
    this.rlSubmit = rlSubmit;
    this.rlTextField = rlTextField;
    this.tvAsterisk = tvAsterisk;
    this.tvBillsHeader = tvBillsHeader;
    this.tvConfirmAsterisk = tvConfirmAsterisk;
    this.tvCpassword = tvCpassword;
    this.tvLogin = tvLogin;
    this.tvOldPassword = tvOldPassword;
    this.tvOldPasswordAsterisk = tvOldPasswordAsterisk;
    this.tvPassword = tvPassword;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_discard;
      TextView btnDiscard = ViewBindings.findChildViewById(rootView, id);
      if (btnDiscard == null) {
        break missingId;
      }

      id = R.id.btn_login;
      TextView btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.et_new_password;
      EditText etNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (etNewPassword == null) {
        break missingId;
      }

      id = R.id.et_OldPassword;
      EditText etOldPassword = ViewBindings.findChildViewById(rootView, id);
      if (etOldPassword == null) {
        break missingId;
      }

      id = R.id.etOldPasswordInput;
      TextInputLayout etOldPasswordInput = ViewBindings.findChildViewById(rootView, id);
      if (etOldPasswordInput == null) {
        break missingId;
      }

      id = R.id.et_rePassword;
      EditText etRePassword = ViewBindings.findChildViewById(rootView, id);
      if (etRePassword == null) {
        break missingId;
      }

      id = R.id.etTextInput;
      TextInputLayout etTextInput = ViewBindings.findChildViewById(rootView, id);
      if (etTextInput == null) {
        break missingId;
      }

      id = R.id.my_toolbar_layout;
      RelativeLayout myToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (myToolbarLayout == null) {
        break missingId;
      }

      id = R.id.rlConfirmPassword;
      RelativeLayout rlConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (rlConfirmPassword == null) {
        break missingId;
      }

      id = R.id.rlDiscard;
      RelativeLayout rlDiscard = ViewBindings.findChildViewById(rootView, id);
      if (rlDiscard == null) {
        break missingId;
      }

      id = R.id.rlOldPassword;
      RelativeLayout rlOldPassword = ViewBindings.findChildViewById(rootView, id);
      if (rlOldPassword == null) {
        break missingId;
      }

      id = R.id.rlOldPasswordTop;
      RelativeLayout rlOldPasswordTop = ViewBindings.findChildViewById(rootView, id);
      if (rlOldPasswordTop == null) {
        break missingId;
      }

      id = R.id.rlPassword;
      RelativeLayout rlPassword = ViewBindings.findChildViewById(rootView, id);
      if (rlPassword == null) {
        break missingId;
      }

      id = R.id.rlSubmit;
      RelativeLayout rlSubmit = ViewBindings.findChildViewById(rootView, id);
      if (rlSubmit == null) {
        break missingId;
      }

      id = R.id.rlTextField;
      RelativeLayout rlTextField = ViewBindings.findChildViewById(rootView, id);
      if (rlTextField == null) {
        break missingId;
      }

      id = R.id.tvAsterisk;
      TextView tvAsterisk = ViewBindings.findChildViewById(rootView, id);
      if (tvAsterisk == null) {
        break missingId;
      }

      id = R.id.tvBillsHeader;
      TextView tvBillsHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvBillsHeader == null) {
        break missingId;
      }

      id = R.id.tvConfirmAsterisk;
      TextView tvConfirmAsterisk = ViewBindings.findChildViewById(rootView, id);
      if (tvConfirmAsterisk == null) {
        break missingId;
      }

      id = R.id.tv_Cpassword;
      TextView tvCpassword = ViewBindings.findChildViewById(rootView, id);
      if (tvCpassword == null) {
        break missingId;
      }

      id = R.id.tvLogin;
      TextView tvLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvLogin == null) {
        break missingId;
      }

      id = R.id.tv_OldPassword;
      TextView tvOldPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvOldPassword == null) {
        break missingId;
      }

      id = R.id.tvOldPasswordAsterisk;
      TextView tvOldPasswordAsterisk = ViewBindings.findChildViewById(rootView, id);
      if (tvOldPasswordAsterisk == null) {
        break missingId;
      }

      id = R.id.tvPassword;
      TextView tvPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvPassword == null) {
        break missingId;
      }

      return new ChangePasswordBinding((NestedScrollView) rootView, btnDiscard, btnLogin,
          etNewPassword, etOldPassword, etOldPasswordInput, etRePassword, etTextInput,
          myToolbarLayout, rlConfirmPassword, rlDiscard, rlOldPassword, rlOldPasswordTop,
          rlPassword, rlSubmit, rlTextField, tvAsterisk, tvBillsHeader, tvConfirmAsterisk,
          tvCpassword, tvLogin, tvOldPassword, tvOldPasswordAsterisk, tvPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
