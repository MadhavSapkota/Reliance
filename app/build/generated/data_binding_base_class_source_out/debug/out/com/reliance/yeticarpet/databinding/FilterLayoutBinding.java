// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FilterLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView btnLogin;

  @NonNull
  public final EditText etFromDate;

  @NonNull
  public final EditText etToDate;

  @NonNull
  public final TextView filterText;

  @NonNull
  public final ImageView ivTopLineBtn;

  @NonNull
  public final RelativeLayout mainContent;

  @NonNull
  public final RelativeLayout rlBillNo;

  @NonNull
  public final RelativeLayout rlDistributer;

  @NonNull
  public final RelativeLayout rlFrom;

  @NonNull
  public final RelativeLayout rlHeader;

  @NonNull
  public final RelativeLayout rlSubmit;

  @NonNull
  public final RelativeLayout rlTo;

  @NonNull
  public final RelativeLayout rlUser;

  @NonNull
  public final EditText spBillNo;

  @NonNull
  public final Spinner spDistributor;

  @NonNull
  public final TextView tvFromField;

  @NonNull
  public final TextView tvPartyName;

  @NonNull
  public final TextView tvRlBillNo;

  @NonNull
  public final TextView tvToDate;

  @NonNull
  public final View view;

  private FilterLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView btnLogin,
      @NonNull EditText etFromDate, @NonNull EditText etToDate, @NonNull TextView filterText,
      @NonNull ImageView ivTopLineBtn, @NonNull RelativeLayout mainContent,
      @NonNull RelativeLayout rlBillNo, @NonNull RelativeLayout rlDistributer,
      @NonNull RelativeLayout rlFrom, @NonNull RelativeLayout rlHeader,
      @NonNull RelativeLayout rlSubmit, @NonNull RelativeLayout rlTo,
      @NonNull RelativeLayout rlUser, @NonNull EditText spBillNo, @NonNull Spinner spDistributor,
      @NonNull TextView tvFromField, @NonNull TextView tvPartyName, @NonNull TextView tvRlBillNo,
      @NonNull TextView tvToDate, @NonNull View view) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.etFromDate = etFromDate;
    this.etToDate = etToDate;
    this.filterText = filterText;
    this.ivTopLineBtn = ivTopLineBtn;
    this.mainContent = mainContent;
    this.rlBillNo = rlBillNo;
    this.rlDistributer = rlDistributer;
    this.rlFrom = rlFrom;
    this.rlHeader = rlHeader;
    this.rlSubmit = rlSubmit;
    this.rlTo = rlTo;
    this.rlUser = rlUser;
    this.spBillNo = spBillNo;
    this.spDistributor = spDistributor;
    this.tvFromField = tvFromField;
    this.tvPartyName = tvPartyName;
    this.tvRlBillNo = tvRlBillNo;
    this.tvToDate = tvToDate;
    this.view = view;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FilterLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FilterLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.filter_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FilterLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_login;
      TextView btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.et_from_date;
      EditText etFromDate = ViewBindings.findChildViewById(rootView, id);
      if (etFromDate == null) {
        break missingId;
      }

      id = R.id.et_to_date;
      EditText etToDate = ViewBindings.findChildViewById(rootView, id);
      if (etToDate == null) {
        break missingId;
      }

      id = R.id.filterText;
      TextView filterText = ViewBindings.findChildViewById(rootView, id);
      if (filterText == null) {
        break missingId;
      }

      id = R.id.iv_top_lineBtn;
      ImageView ivTopLineBtn = ViewBindings.findChildViewById(rootView, id);
      if (ivTopLineBtn == null) {
        break missingId;
      }

      id = R.id.main_content;
      RelativeLayout mainContent = ViewBindings.findChildViewById(rootView, id);
      if (mainContent == null) {
        break missingId;
      }

      id = R.id.rl_bill_no;
      RelativeLayout rlBillNo = ViewBindings.findChildViewById(rootView, id);
      if (rlBillNo == null) {
        break missingId;
      }

      id = R.id.rl_distributer;
      RelativeLayout rlDistributer = ViewBindings.findChildViewById(rootView, id);
      if (rlDistributer == null) {
        break missingId;
      }

      id = R.id.rl_from;
      RelativeLayout rlFrom = ViewBindings.findChildViewById(rootView, id);
      if (rlFrom == null) {
        break missingId;
      }

      id = R.id.rl_header;
      RelativeLayout rlHeader = ViewBindings.findChildViewById(rootView, id);
      if (rlHeader == null) {
        break missingId;
      }

      id = R.id.rlSubmit;
      RelativeLayout rlSubmit = ViewBindings.findChildViewById(rootView, id);
      if (rlSubmit == null) {
        break missingId;
      }

      id = R.id.rl_to;
      RelativeLayout rlTo = ViewBindings.findChildViewById(rootView, id);
      if (rlTo == null) {
        break missingId;
      }

      id = R.id.rlUser;
      RelativeLayout rlUser = ViewBindings.findChildViewById(rootView, id);
      if (rlUser == null) {
        break missingId;
      }

      id = R.id.sp_bill_no;
      EditText spBillNo = ViewBindings.findChildViewById(rootView, id);
      if (spBillNo == null) {
        break missingId;
      }

      id = R.id.sp_distributor;
      Spinner spDistributor = ViewBindings.findChildViewById(rootView, id);
      if (spDistributor == null) {
        break missingId;
      }

      id = R.id.tv_from_field;
      TextView tvFromField = ViewBindings.findChildViewById(rootView, id);
      if (tvFromField == null) {
        break missingId;
      }

      id = R.id.tv_partyName;
      TextView tvPartyName = ViewBindings.findChildViewById(rootView, id);
      if (tvPartyName == null) {
        break missingId;
      }

      id = R.id.tv_rl_bill_no;
      TextView tvRlBillNo = ViewBindings.findChildViewById(rootView, id);
      if (tvRlBillNo == null) {
        break missingId;
      }

      id = R.id.tv_to_date;
      TextView tvToDate = ViewBindings.findChildViewById(rootView, id);
      if (tvToDate == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new FilterLayoutBinding((RelativeLayout) rootView, btnLogin, etFromDate, etToDate,
          filterText, ivTopLineBtn, mainContent, rlBillNo, rlDistributer, rlFrom, rlHeader,
          rlSubmit, rlTo, rlUser, spBillNo, spDistributor, tvFromField, tvPartyName, tvRlBillNo,
          tvToDate, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
