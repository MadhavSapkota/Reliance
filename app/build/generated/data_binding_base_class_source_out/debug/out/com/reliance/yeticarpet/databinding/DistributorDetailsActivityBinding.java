// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DistributorDetailsActivityBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RelativeLayout myToolbarLayout;

  @NonNull
  public final RelativeLayout rlCalioMax;

  @NonNull
  public final RelativeLayout rlCalioo;

  @NonNull
  public final RelativeLayout rlCurrentScheme;

  @NonNull
  public final RelativeLayout rlMain;

  @NonNull
  public final RelativeLayout rlPvc;

  @NonNull
  public final TextView tvBillsHeader;

  @NonNull
  public final TextView tvCalioMax;

  @NonNull
  public final TextView tvCalioMaxPrice;

  @NonNull
  public final TextView tvCalioPrice;

  @NonNull
  public final TextView tvCalioo;

  @NonNull
  public final TextView tvCurrentScheme;

  @NonNull
  public final TextView tvCurrentSchemePrice;

  @NonNull
  public final TextView tvDistributorName;

  @NonNull
  public final View viewLine1;

  @NonNull
  public final View viewLinem;

  private DistributorDetailsActivityBinding(@NonNull NestedScrollView rootView,
      @NonNull RelativeLayout myToolbarLayout, @NonNull RelativeLayout rlCalioMax,
      @NonNull RelativeLayout rlCalioo, @NonNull RelativeLayout rlCurrentScheme,
      @NonNull RelativeLayout rlMain, @NonNull RelativeLayout rlPvc,
      @NonNull TextView tvBillsHeader, @NonNull TextView tvCalioMax,
      @NonNull TextView tvCalioMaxPrice, @NonNull TextView tvCalioPrice, @NonNull TextView tvCalioo,
      @NonNull TextView tvCurrentScheme, @NonNull TextView tvCurrentSchemePrice,
      @NonNull TextView tvDistributorName, @NonNull View viewLine1, @NonNull View viewLinem) {
    this.rootView = rootView;
    this.myToolbarLayout = myToolbarLayout;
    this.rlCalioMax = rlCalioMax;
    this.rlCalioo = rlCalioo;
    this.rlCurrentScheme = rlCurrentScheme;
    this.rlMain = rlMain;
    this.rlPvc = rlPvc;
    this.tvBillsHeader = tvBillsHeader;
    this.tvCalioMax = tvCalioMax;
    this.tvCalioMaxPrice = tvCalioMaxPrice;
    this.tvCalioPrice = tvCalioPrice;
    this.tvCalioo = tvCalioo;
    this.tvCurrentScheme = tvCurrentScheme;
    this.tvCurrentSchemePrice = tvCurrentSchemePrice;
    this.tvDistributorName = tvDistributorName;
    this.viewLine1 = viewLine1;
    this.viewLinem = viewLinem;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DistributorDetailsActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DistributorDetailsActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.distributor_details_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DistributorDetailsActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.my_toolbar_layout;
      RelativeLayout myToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (myToolbarLayout == null) {
        break missingId;
      }

      id = R.id.rl_calio_max;
      RelativeLayout rlCalioMax = ViewBindings.findChildViewById(rootView, id);
      if (rlCalioMax == null) {
        break missingId;
      }

      id = R.id.rl_calioo;
      RelativeLayout rlCalioo = ViewBindings.findChildViewById(rootView, id);
      if (rlCalioo == null) {
        break missingId;
      }

      id = R.id.rl_current_scheme;
      RelativeLayout rlCurrentScheme = ViewBindings.findChildViewById(rootView, id);
      if (rlCurrentScheme == null) {
        break missingId;
      }

      id = R.id.rlMain;
      RelativeLayout rlMain = ViewBindings.findChildViewById(rootView, id);
      if (rlMain == null) {
        break missingId;
      }

      id = R.id.rl_pvc;
      RelativeLayout rlPvc = ViewBindings.findChildViewById(rootView, id);
      if (rlPvc == null) {
        break missingId;
      }

      id = R.id.tvBillsHeader;
      TextView tvBillsHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvBillsHeader == null) {
        break missingId;
      }

      id = R.id.tv_calio_max;
      TextView tvCalioMax = ViewBindings.findChildViewById(rootView, id);
      if (tvCalioMax == null) {
        break missingId;
      }

      id = R.id.tv_calio_max_price;
      TextView tvCalioMaxPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvCalioMaxPrice == null) {
        break missingId;
      }

      id = R.id.tv_calio_price;
      TextView tvCalioPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvCalioPrice == null) {
        break missingId;
      }

      id = R.id.tv_calioo;
      TextView tvCalioo = ViewBindings.findChildViewById(rootView, id);
      if (tvCalioo == null) {
        break missingId;
      }

      id = R.id.tv_current_scheme;
      TextView tvCurrentScheme = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentScheme == null) {
        break missingId;
      }

      id = R.id.tv_current_scheme_price;
      TextView tvCurrentSchemePrice = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentSchemePrice == null) {
        break missingId;
      }

      id = R.id.tvDistributorName;
      TextView tvDistributorName = ViewBindings.findChildViewById(rootView, id);
      if (tvDistributorName == null) {
        break missingId;
      }

      id = R.id.view_line1;
      View viewLine1 = ViewBindings.findChildViewById(rootView, id);
      if (viewLine1 == null) {
        break missingId;
      }

      id = R.id.view_linem;
      View viewLinem = ViewBindings.findChildViewById(rootView, id);
      if (viewLinem == null) {
        break missingId;
      }

      return new DistributorDetailsActivityBinding((NestedScrollView) rootView, myToolbarLayout,
          rlCalioMax, rlCalioo, rlCurrentScheme, rlMain, rlPvc, tvBillsHeader, tvCalioMax,
          tvCalioMaxPrice, tvCalioPrice, tvCalioo, tvCurrentScheme, tvCurrentSchemePrice,
          tvDistributorName, viewLine1, viewLinem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
