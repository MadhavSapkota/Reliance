// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HorizontalBarDataBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout rlLayoutTop;

  @NonNull
  public final RelativeLayout rlPercentage;

  @NonNull
  public final TextView tvMinimumAmount;

  @NonNull
  public final TextView valuePercentage;

  @NonNull
  public final TextView valueText;

  @NonNull
  public final View view;

  @NonNull
  public final View view2;

  private HorizontalBarDataBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout rlLayoutTop, @NonNull RelativeLayout rlPercentage,
      @NonNull TextView tvMinimumAmount, @NonNull TextView valuePercentage,
      @NonNull TextView valueText, @NonNull View view, @NonNull View view2) {
    this.rootView = rootView;
    this.rlLayoutTop = rlLayoutTop;
    this.rlPercentage = rlPercentage;
    this.tvMinimumAmount = tvMinimumAmount;
    this.valuePercentage = valuePercentage;
    this.valueText = valueText;
    this.view = view;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HorizontalBarDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HorizontalBarDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.horizontal_bar_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HorizontalBarDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rlLayoutTop;
      RelativeLayout rlLayoutTop = ViewBindings.findChildViewById(rootView, id);
      if (rlLayoutTop == null) {
        break missingId;
      }

      id = R.id.rl_percentage;
      RelativeLayout rlPercentage = ViewBindings.findChildViewById(rootView, id);
      if (rlPercentage == null) {
        break missingId;
      }

      id = R.id.tv_minimum_amount;
      TextView tvMinimumAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvMinimumAmount == null) {
        break missingId;
      }

      id = R.id.value_percentage;
      TextView valuePercentage = ViewBindings.findChildViewById(rootView, id);
      if (valuePercentage == null) {
        break missingId;
      }

      id = R.id.value_text;
      TextView valueText = ViewBindings.findChildViewById(rootView, id);
      if (valueText == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new HorizontalBarDataBinding((RelativeLayout) rootView, rlLayoutTop, rlPercentage,
          tvMinimumAmount, valuePercentage, valueText, view, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
