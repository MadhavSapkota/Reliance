// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RetailerDashboardDataBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout graphStartMonthlyTarget;

  @NonNull
  public final ImageView iVAveragePurchase;

  @NonNull
  public final ImageView iVRequiredPurchase;

  @NonNull
  public final CheckBox ivDropIcon;

  @NonNull
  public final DashboardRecyclerviewBinding recyclerviewBarCharts;

  @NonNull
  public final RelativeLayout rlAveragePurchase;

  @NonNull
  public final RelativeLayout rlCurrentOffer;

  @NonNull
  public final RelativeLayout rlGraphIndicators;

  @NonNull
  public final RelativeLayout rlLayoutGraph;

  @NonNull
  public final RelativeLayout rlMonthlyTargetTracker;

  @NonNull
  public final TextView rlMonthlyTracker;

  @NonNull
  public final RelativeLayout rlPurchase;

  @NonNull
  public final RelativeLayout rlRequirePurchase;

  @NonNull
  public final RelativeLayout rlScheme;

  @NonNull
  public final RelativeLayout rlSchemeEarned;

  @NonNull
  public final RelativeLayout rlSchemeEarned1;

  @NonNull
  public final TextView textAnnualScheme;

  @NonNull
  public final TextView textCurrentOffer;

  @NonNull
  public final TextView textPercentage;

  @NonNull
  public final TextView textRsAmount;

  @NonNull
  public final TextView textSchemeEarned;

  @NonNull
  public final TextView tvAveragePurchase;

  @NonNull
  public final TextView tvRequiredPurchase;

  @NonNull
  public final TextView tvSchemeEarned;

  @NonNull
  public final TextView tvSchemeEarnedUnit;

  @NonNull
  public final TextView tvTotalPurchase;

  @NonNull
  public final TextView tvTotalPurchasePrice;

  @NonNull
  public final View view;

  @NonNull
  public final View view2;

  @NonNull
  public final View view3;

  @NonNull
  public final View view4;

  @NonNull
  public final View viewLine;

  private RetailerDashboardDataBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout graphStartMonthlyTarget, @NonNull ImageView iVAveragePurchase,
      @NonNull ImageView iVRequiredPurchase, @NonNull CheckBox ivDropIcon,
      @NonNull DashboardRecyclerviewBinding recyclerviewBarCharts,
      @NonNull RelativeLayout rlAveragePurchase, @NonNull RelativeLayout rlCurrentOffer,
      @NonNull RelativeLayout rlGraphIndicators, @NonNull RelativeLayout rlLayoutGraph,
      @NonNull RelativeLayout rlMonthlyTargetTracker, @NonNull TextView rlMonthlyTracker,
      @NonNull RelativeLayout rlPurchase, @NonNull RelativeLayout rlRequirePurchase,
      @NonNull RelativeLayout rlScheme, @NonNull RelativeLayout rlSchemeEarned,
      @NonNull RelativeLayout rlSchemeEarned1, @NonNull TextView textAnnualScheme,
      @NonNull TextView textCurrentOffer, @NonNull TextView textPercentage,
      @NonNull TextView textRsAmount, @NonNull TextView textSchemeEarned,
      @NonNull TextView tvAveragePurchase, @NonNull TextView tvRequiredPurchase,
      @NonNull TextView tvSchemeEarned, @NonNull TextView tvSchemeEarnedUnit,
      @NonNull TextView tvTotalPurchase, @NonNull TextView tvTotalPurchasePrice, @NonNull View view,
      @NonNull View view2, @NonNull View view3, @NonNull View view4, @NonNull View viewLine) {
    this.rootView = rootView;
    this.graphStartMonthlyTarget = graphStartMonthlyTarget;
    this.iVAveragePurchase = iVAveragePurchase;
    this.iVRequiredPurchase = iVRequiredPurchase;
    this.ivDropIcon = ivDropIcon;
    this.recyclerviewBarCharts = recyclerviewBarCharts;
    this.rlAveragePurchase = rlAveragePurchase;
    this.rlCurrentOffer = rlCurrentOffer;
    this.rlGraphIndicators = rlGraphIndicators;
    this.rlLayoutGraph = rlLayoutGraph;
    this.rlMonthlyTargetTracker = rlMonthlyTargetTracker;
    this.rlMonthlyTracker = rlMonthlyTracker;
    this.rlPurchase = rlPurchase;
    this.rlRequirePurchase = rlRequirePurchase;
    this.rlScheme = rlScheme;
    this.rlSchemeEarned = rlSchemeEarned;
    this.rlSchemeEarned1 = rlSchemeEarned1;
    this.textAnnualScheme = textAnnualScheme;
    this.textCurrentOffer = textCurrentOffer;
    this.textPercentage = textPercentage;
    this.textRsAmount = textRsAmount;
    this.textSchemeEarned = textSchemeEarned;
    this.tvAveragePurchase = tvAveragePurchase;
    this.tvRequiredPurchase = tvRequiredPurchase;
    this.tvSchemeEarned = tvSchemeEarned;
    this.tvSchemeEarnedUnit = tvSchemeEarnedUnit;
    this.tvTotalPurchase = tvTotalPurchase;
    this.tvTotalPurchasePrice = tvTotalPurchasePrice;
    this.view = view;
    this.view2 = view2;
    this.view3 = view3;
    this.view4 = view4;
    this.viewLine = viewLine;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RetailerDashboardDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RetailerDashboardDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.retailer_dashboard_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RetailerDashboardDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.graph_start_monthly_target;
      RelativeLayout graphStartMonthlyTarget = ViewBindings.findChildViewById(rootView, id);
      if (graphStartMonthlyTarget == null) {
        break missingId;
      }

      id = R.id.iVAveragePurchase;
      ImageView iVAveragePurchase = ViewBindings.findChildViewById(rootView, id);
      if (iVAveragePurchase == null) {
        break missingId;
      }

      id = R.id.iVRequiredPurchase;
      ImageView iVRequiredPurchase = ViewBindings.findChildViewById(rootView, id);
      if (iVRequiredPurchase == null) {
        break missingId;
      }

      id = R.id.ivDropIcon;
      CheckBox ivDropIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivDropIcon == null) {
        break missingId;
      }

      id = R.id.recyclerview_bar_charts;
      View recyclerviewBarCharts = ViewBindings.findChildViewById(rootView, id);
      if (recyclerviewBarCharts == null) {
        break missingId;
      }
      DashboardRecyclerviewBinding binding_recyclerviewBarCharts = DashboardRecyclerviewBinding.bind(recyclerviewBarCharts);

      id = R.id.rlAveragePurchase;
      RelativeLayout rlAveragePurchase = ViewBindings.findChildViewById(rootView, id);
      if (rlAveragePurchase == null) {
        break missingId;
      }

      id = R.id.rl_current_offer;
      RelativeLayout rlCurrentOffer = ViewBindings.findChildViewById(rootView, id);
      if (rlCurrentOffer == null) {
        break missingId;
      }

      id = R.id.rlGraphIndicators;
      RelativeLayout rlGraphIndicators = ViewBindings.findChildViewById(rootView, id);
      if (rlGraphIndicators == null) {
        break missingId;
      }

      id = R.id.rlLayoutGraph;
      RelativeLayout rlLayoutGraph = ViewBindings.findChildViewById(rootView, id);
      if (rlLayoutGraph == null) {
        break missingId;
      }

      id = R.id.rl_monthly_target_tracker;
      RelativeLayout rlMonthlyTargetTracker = ViewBindings.findChildViewById(rootView, id);
      if (rlMonthlyTargetTracker == null) {
        break missingId;
      }

      id = R.id.rl_monthly_tracker;
      TextView rlMonthlyTracker = ViewBindings.findChildViewById(rootView, id);
      if (rlMonthlyTracker == null) {
        break missingId;
      }

      id = R.id.rlPurchase;
      RelativeLayout rlPurchase = ViewBindings.findChildViewById(rootView, id);
      if (rlPurchase == null) {
        break missingId;
      }

      id = R.id.rlRequirePurchase;
      RelativeLayout rlRequirePurchase = ViewBindings.findChildViewById(rootView, id);
      if (rlRequirePurchase == null) {
        break missingId;
      }

      id = R.id.rl_scheme;
      RelativeLayout rlScheme = ViewBindings.findChildViewById(rootView, id);
      if (rlScheme == null) {
        break missingId;
      }

      id = R.id.rl_scheme_earned;
      RelativeLayout rlSchemeEarned = ViewBindings.findChildViewById(rootView, id);
      if (rlSchemeEarned == null) {
        break missingId;
      }

      id = R.id.rlSchemeEarned;
      RelativeLayout rlSchemeEarned1 = ViewBindings.findChildViewById(rootView, id);
      if (rlSchemeEarned1 == null) {
        break missingId;
      }

      id = R.id.text_annual_scheme;
      TextView textAnnualScheme = ViewBindings.findChildViewById(rootView, id);
      if (textAnnualScheme == null) {
        break missingId;
      }

      id = R.id.text_current_offer;
      TextView textCurrentOffer = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentOffer == null) {
        break missingId;
      }

      id = R.id.text_percentage;
      TextView textPercentage = ViewBindings.findChildViewById(rootView, id);
      if (textPercentage == null) {
        break missingId;
      }

      id = R.id.text_rs_amount;
      TextView textRsAmount = ViewBindings.findChildViewById(rootView, id);
      if (textRsAmount == null) {
        break missingId;
      }

      id = R.id.text_scheme_earned;
      TextView textSchemeEarned = ViewBindings.findChildViewById(rootView, id);
      if (textSchemeEarned == null) {
        break missingId;
      }

      id = R.id.tvAveragePurchase;
      TextView tvAveragePurchase = ViewBindings.findChildViewById(rootView, id);
      if (tvAveragePurchase == null) {
        break missingId;
      }

      id = R.id.tvRequiredPurchase;
      TextView tvRequiredPurchase = ViewBindings.findChildViewById(rootView, id);
      if (tvRequiredPurchase == null) {
        break missingId;
      }

      id = R.id.tv_scheme_earned;
      TextView tvSchemeEarned = ViewBindings.findChildViewById(rootView, id);
      if (tvSchemeEarned == null) {
        break missingId;
      }

      id = R.id.tv_scheme_earned_unit;
      TextView tvSchemeEarnedUnit = ViewBindings.findChildViewById(rootView, id);
      if (tvSchemeEarnedUnit == null) {
        break missingId;
      }

      id = R.id.tv_total_purchase;
      TextView tvTotalPurchase = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalPurchase == null) {
        break missingId;
      }

      id = R.id.tv_total_purchase_price;
      TextView tvTotalPurchasePrice = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalPurchasePrice == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view4;
      View view4 = ViewBindings.findChildViewById(rootView, id);
      if (view4 == null) {
        break missingId;
      }

      id = R.id.view_line;
      View viewLine = ViewBindings.findChildViewById(rootView, id);
      if (viewLine == null) {
        break missingId;
      }

      return new RetailerDashboardDataBinding((RelativeLayout) rootView, graphStartMonthlyTarget,
          iVAveragePurchase, iVRequiredPurchase, ivDropIcon, binding_recyclerviewBarCharts,
          rlAveragePurchase, rlCurrentOffer, rlGraphIndicators, rlLayoutGraph,
          rlMonthlyTargetTracker, rlMonthlyTracker, rlPurchase, rlRequirePurchase, rlScheme,
          rlSchemeEarned, rlSchemeEarned1, textAnnualScheme, textCurrentOffer, textPercentage,
          textRsAmount, textSchemeEarned, tvAveragePurchase, tvRequiredPurchase, tvSchemeEarned,
          tvSchemeEarnedUnit, tvTotalPurchase, tvTotalPurchasePrice, view, view2, view3, view4,
          viewLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
