// Generated by view binder compiler. Do not edit!
package com.reliance.yeticarpet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.reliance.yeticarpet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AnnualSchemeDataBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CheckBox ivDropIcon;

  @NonNull
  public final RelativeLayout rlCurrentOffer;

  @NonNull
  public final RelativeLayout rlPurchase;

  @NonNull
  public final RelativeLayout rlScheme;

  @NonNull
  public final RelativeLayout rlSchemeEarned;

  @NonNull
  public final RelativeLayout rlSchemeEarned1;

  @NonNull
  public final TextView textAnnualScheme;

  @NonNull
  public final TextView textCurrentOffer;

  @NonNull
  public final TextView textPercentage;

  @NonNull
  public final TextView textRsAmount;

  @NonNull
  public final TextView textSchemeEarned;

  @NonNull
  public final TextView tvSchemeEarned;

  @NonNull
  public final TextView tvSchemeEarnedUnit;

  @NonNull
  public final TextView tvTotalPurchase;

  @NonNull
  public final TextView tvTotalPurchasePrice;

  @NonNull
  public final View view;

  @NonNull
  public final View view2;

  @NonNull
  public final View view3;

  @NonNull
  public final View view4;

  private AnnualSchemeDataBinding(@NonNull RelativeLayout rootView, @NonNull CheckBox ivDropIcon,
      @NonNull RelativeLayout rlCurrentOffer, @NonNull RelativeLayout rlPurchase,
      @NonNull RelativeLayout rlScheme, @NonNull RelativeLayout rlSchemeEarned,
      @NonNull RelativeLayout rlSchemeEarned1, @NonNull TextView textAnnualScheme,
      @NonNull TextView textCurrentOffer, @NonNull TextView textPercentage,
      @NonNull TextView textRsAmount, @NonNull TextView textSchemeEarned,
      @NonNull TextView tvSchemeEarned, @NonNull TextView tvSchemeEarnedUnit,
      @NonNull TextView tvTotalPurchase, @NonNull TextView tvTotalPurchasePrice, @NonNull View view,
      @NonNull View view2, @NonNull View view3, @NonNull View view4) {
    this.rootView = rootView;
    this.ivDropIcon = ivDropIcon;
    this.rlCurrentOffer = rlCurrentOffer;
    this.rlPurchase = rlPurchase;
    this.rlScheme = rlScheme;
    this.rlSchemeEarned = rlSchemeEarned;
    this.rlSchemeEarned1 = rlSchemeEarned1;
    this.textAnnualScheme = textAnnualScheme;
    this.textCurrentOffer = textCurrentOffer;
    this.textPercentage = textPercentage;
    this.textRsAmount = textRsAmount;
    this.textSchemeEarned = textSchemeEarned;
    this.tvSchemeEarned = tvSchemeEarned;
    this.tvSchemeEarnedUnit = tvSchemeEarnedUnit;
    this.tvTotalPurchase = tvTotalPurchase;
    this.tvTotalPurchasePrice = tvTotalPurchasePrice;
    this.view = view;
    this.view2 = view2;
    this.view3 = view3;
    this.view4 = view4;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AnnualSchemeDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AnnualSchemeDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.annual_scheme_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AnnualSchemeDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivDropIcon;
      CheckBox ivDropIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivDropIcon == null) {
        break missingId;
      }

      id = R.id.rl_current_offer;
      RelativeLayout rlCurrentOffer = ViewBindings.findChildViewById(rootView, id);
      if (rlCurrentOffer == null) {
        break missingId;
      }

      id = R.id.rlPurchase;
      RelativeLayout rlPurchase = ViewBindings.findChildViewById(rootView, id);
      if (rlPurchase == null) {
        break missingId;
      }

      id = R.id.rl_scheme;
      RelativeLayout rlScheme = ViewBindings.findChildViewById(rootView, id);
      if (rlScheme == null) {
        break missingId;
      }

      id = R.id.rl_scheme_earned;
      RelativeLayout rlSchemeEarned = ViewBindings.findChildViewById(rootView, id);
      if (rlSchemeEarned == null) {
        break missingId;
      }

      id = R.id.rlSchemeEarned;
      RelativeLayout rlSchemeEarned1 = ViewBindings.findChildViewById(rootView, id);
      if (rlSchemeEarned1 == null) {
        break missingId;
      }

      id = R.id.text_annual_scheme;
      TextView textAnnualScheme = ViewBindings.findChildViewById(rootView, id);
      if (textAnnualScheme == null) {
        break missingId;
      }

      id = R.id.text_current_offer;
      TextView textCurrentOffer = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentOffer == null) {
        break missingId;
      }

      id = R.id.text_percentage;
      TextView textPercentage = ViewBindings.findChildViewById(rootView, id);
      if (textPercentage == null) {
        break missingId;
      }

      id = R.id.text_rs_amount;
      TextView textRsAmount = ViewBindings.findChildViewById(rootView, id);
      if (textRsAmount == null) {
        break missingId;
      }

      id = R.id.text_scheme_earned;
      TextView textSchemeEarned = ViewBindings.findChildViewById(rootView, id);
      if (textSchemeEarned == null) {
        break missingId;
      }

      id = R.id.tv_scheme_earned;
      TextView tvSchemeEarned = ViewBindings.findChildViewById(rootView, id);
      if (tvSchemeEarned == null) {
        break missingId;
      }

      id = R.id.tv_scheme_earned_unit;
      TextView tvSchemeEarnedUnit = ViewBindings.findChildViewById(rootView, id);
      if (tvSchemeEarnedUnit == null) {
        break missingId;
      }

      id = R.id.tv_total_purchase;
      TextView tvTotalPurchase = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalPurchase == null) {
        break missingId;
      }

      id = R.id.tv_total_purchase_price;
      TextView tvTotalPurchasePrice = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalPurchasePrice == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view4;
      View view4 = ViewBindings.findChildViewById(rootView, id);
      if (view4 == null) {
        break missingId;
      }

      return new AnnualSchemeDataBinding((RelativeLayout) rootView, ivDropIcon, rlCurrentOffer,
          rlPurchase, rlScheme, rlSchemeEarned, rlSchemeEarned1, textAnnualScheme, textCurrentOffer,
          textPercentage, textRsAmount, textSchemeEarned, tvSchemeEarned, tvSchemeEarnedUnit,
          tvTotalPurchase, tvTotalPurchasePrice, view, view2, view3, view4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
