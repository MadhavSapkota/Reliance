// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.login.di;

import com.reliance.yeticarpet.activity.login.mvp.LoginView;
import com.reliance.yeticarpet.dialog.LoginErrorDialog;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginModule_GetLoginViewFactory implements Factory<LoginView> {
  private final LoginModule module;

  private final Provider<LoginErrorDialog> loginErrorDialogProvider;

  public LoginModule_GetLoginViewFactory(LoginModule module,
      Provider<LoginErrorDialog> loginErrorDialogProvider) {
    this.module = module;
    this.loginErrorDialogProvider = loginErrorDialogProvider;
  }

  @Override
  public LoginView get() {
    return getLoginView(module, loginErrorDialogProvider.get());
  }

  public static LoginModule_GetLoginViewFactory create(LoginModule module,
      Provider<LoginErrorDialog> loginErrorDialogProvider) {
    return new LoginModule_GetLoginViewFactory(module, loginErrorDialogProvider);
  }

  public static LoginView getLoginView(LoginModule instance, LoginErrorDialog loginErrorDialog) {
    return Preconditions.checkNotNullFromProvides(instance.getLoginView(loginErrorDialog));
  }
}
