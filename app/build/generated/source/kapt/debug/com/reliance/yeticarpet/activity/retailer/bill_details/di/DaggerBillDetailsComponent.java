// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.retailer.bill_details.di;

import com.reliance.yeticarpet.activity.retailer.bill_details.BillDetailsActivity;
import com.reliance.yeticarpet.activity.retailer.bill_details.BillDetailsActivity_MembersInjector;
import com.reliance.yeticarpet.activity.retailer.bill_details.adapter.BillsDetailsAdapter;
import com.reliance.yeticarpet.activity.retailer.bill_details.mvp.BillDetailsModel;
import com.reliance.yeticarpet.activity.retailer.bill_details.mvp.BillDetailsPresenter;
import com.reliance.yeticarpet.activity.retailer.bill_details.mvp.BillDetailsView;
import com.reliance.yeticarpet.app.AppComponent;
import com.reliance.yeticarpet.dialog.CredentialsErrorDialog;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerBillDetailsComponent implements BillDetailsComponent {
  private final BillDetailsModule billDetailsModule;

  private final AppComponent appComponent;

  private Provider<String> getErrorMessageProvider;

  private Provider<CredentialsErrorDialog> getBillDetailsDialogProvider;

  private Provider<BillsDetailsAdapter> getBillsAdapterProvider;

  private Provider<BillDetailsView> getBillsDetailsViewProvider;

  private DaggerBillDetailsComponent(BillDetailsModule billDetailsModuleParam,
      AppComponent appComponentParam) {
    this.billDetailsModule = billDetailsModuleParam;
    this.appComponent = appComponentParam;
    initialize(billDetailsModuleParam, appComponentParam);
  }

  public static Builder builder() {
    return new Builder();
  }

  private BillDetailsModel billDetailsModel() {
    return BillDetailsModule_GetBillsDetailsModelFactory.getBillsDetailsModel(billDetailsModule, Preconditions.checkNotNullFromComponent(appComponent.webservice()));
  }

  private BillDetailsPresenter billDetailsPresenter() {
    return BillDetailsModule_GetBillsDetailsPresenterFactory.getBillsDetailsPresenter(billDetailsModule, billDetailsModel(), getBillsDetailsViewProvider.get());
  }

  @SuppressWarnings("unchecked")
  private void initialize(final BillDetailsModule billDetailsModuleParam,
      final AppComponent appComponentParam) {
    this.getErrorMessageProvider = BillDetailsModule_GetErrorMessageFactory.create(billDetailsModuleParam);
    this.getBillDetailsDialogProvider = BillDetailsModule_GetBillDetailsDialogFactory.create(billDetailsModuleParam, getErrorMessageProvider);
    this.getBillsAdapterProvider = BillDetailsModule_GetBillsAdapterFactory.create(billDetailsModuleParam);
    this.getBillsDetailsViewProvider = DoubleCheck.provider(BillDetailsModule_GetBillsDetailsViewFactory.create(billDetailsModuleParam, getBillDetailsDialogProvider, getBillsAdapterProvider));
  }

  @Override
  public void inject(BillDetailsActivity billDetailsActivity) {
    injectBillDetailsActivity(billDetailsActivity);
  }

  private BillDetailsActivity injectBillDetailsActivity(BillDetailsActivity instance) {
    BillDetailsActivity_MembersInjector.injectBillDetailsView(instance, getBillsDetailsViewProvider.get());
    BillDetailsActivity_MembersInjector.injectBillDetailsPresenter(instance, billDetailsPresenter());
    return instance;
  }

  public static final class Builder {
    private BillDetailsModule billDetailsModule;

    private AppComponent appComponent;

    private Builder() {
    }

    public Builder billDetailsModule(BillDetailsModule billDetailsModule) {
      this.billDetailsModule = Preconditions.checkNotNull(billDetailsModule);
      return this;
    }

    public Builder appComponent(AppComponent appComponent) {
      this.appComponent = Preconditions.checkNotNull(appComponent);
      return this;
    }

    public BillDetailsComponent build() {
      Preconditions.checkBuilderRequirement(billDetailsModule, BillDetailsModule.class);
      Preconditions.checkBuilderRequirement(appComponent, AppComponent.class);
      return new DaggerBillDetailsComponent(billDetailsModule, appComponent);
    }
  }
}
