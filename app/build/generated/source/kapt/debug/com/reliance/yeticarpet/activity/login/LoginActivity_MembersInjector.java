// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.login;

import com.reliance.yeticarpet.activity.login.mvp.LoginPresenter;
import com.reliance.yeticarpet.activity.login.mvp.LoginView;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginActivity_MembersInjector implements MembersInjector<LoginActivity> {
  private final Provider<LoginView> loginViewProvider;

  private final Provider<LoginPresenter> loginPresenterProvider;

  public LoginActivity_MembersInjector(Provider<LoginView> loginViewProvider,
      Provider<LoginPresenter> loginPresenterProvider) {
    this.loginViewProvider = loginViewProvider;
    this.loginPresenterProvider = loginPresenterProvider;
  }

  public static MembersInjector<LoginActivity> create(Provider<LoginView> loginViewProvider,
      Provider<LoginPresenter> loginPresenterProvider) {
    return new LoginActivity_MembersInjector(loginViewProvider, loginPresenterProvider);
  }

  @Override
  public void injectMembers(LoginActivity instance) {
    injectLoginView(instance, loginViewProvider.get());
    injectLoginPresenter(instance, loginPresenterProvider.get());
  }

  @InjectedFieldSignature("com.reliance.yeticarpet.activity.login.LoginActivity.loginView")
  public static void injectLoginView(LoginActivity instance, LoginView loginView) {
    instance.loginView = loginView;
  }

  @InjectedFieldSignature("com.reliance.yeticarpet.activity.login.LoginActivity.loginPresenter")
  public static void injectLoginPresenter(LoginActivity instance, LoginPresenter loginPresenter) {
    instance.loginPresenter = loginPresenter;
  }
}
