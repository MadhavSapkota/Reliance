// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.app;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Cache;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_CacheFactory implements Factory<Cache> {
  private final NetworkModule module;

  private final Provider<Context> contextProvider;

  public NetworkModule_CacheFactory(NetworkModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public Cache get() {
    return cache(module, contextProvider.get());
  }

  public static NetworkModule_CacheFactory create(NetworkModule module,
      Provider<Context> contextProvider) {
    return new NetworkModule_CacheFactory(module, contextProvider);
  }

  public static Cache cache(NetworkModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.cache(context));
  }
}
