// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.retailer.monthly_tracker.di;

import com.reliance.yeticarpet.activity.retailer.monthly_tracker.adapter.PercentageAdapter;
import com.reliance.yeticarpet.activity.retailer.monthly_tracker.adapter.TrackerAdapter;
import com.reliance.yeticarpet.activity.retailer.monthly_tracker.mvp.MonthlyTrackerView;
import com.reliance.yeticarpet.dialog.CredentialsErrorDialog;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MonthlyTrackerModule_GetMonthlyTrackerViewFactory implements Factory<MonthlyTrackerView> {
  private final MonthlyTrackerModule module;

  private final Provider<CredentialsErrorDialog> loginErrorDialogProvider;

  private final Provider<TrackerAdapter> monthlyTrackerAdapterProvider;

  private final Provider<PercentageAdapter> percentageAdapterProvider;

  public MonthlyTrackerModule_GetMonthlyTrackerViewFactory(MonthlyTrackerModule module,
      Provider<CredentialsErrorDialog> loginErrorDialogProvider,
      Provider<TrackerAdapter> monthlyTrackerAdapterProvider,
      Provider<PercentageAdapter> percentageAdapterProvider) {
    this.module = module;
    this.loginErrorDialogProvider = loginErrorDialogProvider;
    this.monthlyTrackerAdapterProvider = monthlyTrackerAdapterProvider;
    this.percentageAdapterProvider = percentageAdapterProvider;
  }

  @Override
  public MonthlyTrackerView get() {
    return getMonthlyTrackerView(module, loginErrorDialogProvider.get(), monthlyTrackerAdapterProvider.get(), percentageAdapterProvider.get());
  }

  public static MonthlyTrackerModule_GetMonthlyTrackerViewFactory create(
      MonthlyTrackerModule module, Provider<CredentialsErrorDialog> loginErrorDialogProvider,
      Provider<TrackerAdapter> monthlyTrackerAdapterProvider,
      Provider<PercentageAdapter> percentageAdapterProvider) {
    return new MonthlyTrackerModule_GetMonthlyTrackerViewFactory(module, loginErrorDialogProvider, monthlyTrackerAdapterProvider, percentageAdapterProvider);
  }

  public static MonthlyTrackerView getMonthlyTrackerView(MonthlyTrackerModule instance,
      CredentialsErrorDialog loginErrorDialog, TrackerAdapter monthlyTrackerAdapter,
      PercentageAdapter percentageAdapter) {
    return Preconditions.checkNotNullFromProvides(instance.getMonthlyTrackerView(loginErrorDialog, monthlyTrackerAdapter, percentageAdapter));
  }
}
