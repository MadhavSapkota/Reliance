// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.fragment.distributor.dashboard.di;

import com.reliance.yeticarpet.app.Webservice;
import com.reliance.yeticarpet.fragment.distributor.dashboard.mvp.DistributorDashboardModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DistributorDashboardFragmentModule_GetDistributorDashboardModelFactory implements Factory<DistributorDashboardModel> {
  private final DistributorDashboardFragmentModule module;

  private final Provider<Webservice> webserviceProvider;

  public DistributorDashboardFragmentModule_GetDistributorDashboardModelFactory(
      DistributorDashboardFragmentModule module, Provider<Webservice> webserviceProvider) {
    this.module = module;
    this.webserviceProvider = webserviceProvider;
  }

  @Override
  public DistributorDashboardModel get() {
    return getDistributorDashboardModel(module, webserviceProvider.get());
  }

  public static DistributorDashboardFragmentModule_GetDistributorDashboardModelFactory create(
      DistributorDashboardFragmentModule module, Provider<Webservice> webserviceProvider) {
    return new DistributorDashboardFragmentModule_GetDistributorDashboardModelFactory(module, webserviceProvider);
  }

  public static DistributorDashboardModel getDistributorDashboardModel(
      DistributorDashboardFragmentModule instance, Webservice webservice) {
    return Preconditions.checkNotNullFromProvides(instance.getDistributorDashboardModel(webservice));
  }
}
