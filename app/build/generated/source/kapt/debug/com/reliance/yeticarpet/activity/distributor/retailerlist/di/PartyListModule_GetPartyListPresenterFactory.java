// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.distributor.retailerlist.di;

import com.reliance.yeticarpet.activity.distributor.retailerlist.mvp.PartyListModel;
import com.reliance.yeticarpet.activity.distributor.retailerlist.mvp.PartyListPresenter;
import com.reliance.yeticarpet.activity.distributor.retailerlist.mvp.PartyListView;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PartyListModule_GetPartyListPresenterFactory implements Factory<PartyListPresenter> {
  private final PartyListModule module;

  private final Provider<PartyListModel> partyListModelProvider;

  private final Provider<PartyListView> partyListViewProvider;

  public PartyListModule_GetPartyListPresenterFactory(PartyListModule module,
      Provider<PartyListModel> partyListModelProvider,
      Provider<PartyListView> partyListViewProvider) {
    this.module = module;
    this.partyListModelProvider = partyListModelProvider;
    this.partyListViewProvider = partyListViewProvider;
  }

  @Override
  public PartyListPresenter get() {
    return getPartyListPresenter(module, partyListModelProvider.get(), partyListViewProvider.get());
  }

  public static PartyListModule_GetPartyListPresenterFactory create(PartyListModule module,
      Provider<PartyListModel> partyListModelProvider,
      Provider<PartyListView> partyListViewProvider) {
    return new PartyListModule_GetPartyListPresenterFactory(module, partyListModelProvider, partyListViewProvider);
  }

  public static PartyListPresenter getPartyListPresenter(PartyListModule instance,
      PartyListModel partyListModel, PartyListView partyListView) {
    return Preconditions.checkNotNullFromProvides(instance.getPartyListPresenter(partyListModel, partyListView));
  }
}
