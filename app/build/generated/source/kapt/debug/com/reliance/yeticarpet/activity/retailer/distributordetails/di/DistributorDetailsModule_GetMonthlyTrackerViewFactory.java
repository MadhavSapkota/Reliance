// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.retailer.distributordetails.di;

import com.reliance.yeticarpet.activity.retailer.distributordetails.mvp.DistributorDetailsView;
import com.reliance.yeticarpet.dialog.CredentialsErrorDialog;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DistributorDetailsModule_GetMonthlyTrackerViewFactory implements Factory<DistributorDetailsView> {
  private final DistributorDetailsModule module;

  private final Provider<CredentialsErrorDialog> loginErrorDialogProvider;

  public DistributorDetailsModule_GetMonthlyTrackerViewFactory(DistributorDetailsModule module,
      Provider<CredentialsErrorDialog> loginErrorDialogProvider) {
    this.module = module;
    this.loginErrorDialogProvider = loginErrorDialogProvider;
  }

  @Override
  public DistributorDetailsView get() {
    return getMonthlyTrackerView(module, loginErrorDialogProvider.get());
  }

  public static DistributorDetailsModule_GetMonthlyTrackerViewFactory create(
      DistributorDetailsModule module, Provider<CredentialsErrorDialog> loginErrorDialogProvider) {
    return new DistributorDetailsModule_GetMonthlyTrackerViewFactory(module, loginErrorDialogProvider);
  }

  public static DistributorDetailsView getMonthlyTrackerView(DistributorDetailsModule instance,
      CredentialsErrorDialog loginErrorDialog) {
    return Preconditions.checkNotNullFromProvides(instance.getMonthlyTrackerView(loginErrorDialog));
  }
}
