// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.otp.di;

import com.reliance.yeticarpet.activity.otp.mvp.OtpModel;
import com.reliance.yeticarpet.activity.otp.mvp.OtpPresenter;
import com.reliance.yeticarpet.activity.otp.mvp.OtpView;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OtpModule_GetOtpPresenterFactory implements Factory<OtpPresenter> {
  private final OtpModule module;

  private final Provider<OtpModel> otpModelProvider;

  private final Provider<OtpView> otpViewProvider;

  public OtpModule_GetOtpPresenterFactory(OtpModule module, Provider<OtpModel> otpModelProvider,
      Provider<OtpView> otpViewProvider) {
    this.module = module;
    this.otpModelProvider = otpModelProvider;
    this.otpViewProvider = otpViewProvider;
  }

  @Override
  public OtpPresenter get() {
    return getOtpPresenter(module, otpModelProvider.get(), otpViewProvider.get());
  }

  public static OtpModule_GetOtpPresenterFactory create(OtpModule module,
      Provider<OtpModel> otpModelProvider, Provider<OtpView> otpViewProvider) {
    return new OtpModule_GetOtpPresenterFactory(module, otpModelProvider, otpViewProvider);
  }

  public static OtpPresenter getOtpPresenter(OtpModule instance, OtpModel otpModel,
      OtpView otpView) {
    return Preconditions.checkNotNullFromProvides(instance.getOtpPresenter(otpModel, otpView));
  }
}
