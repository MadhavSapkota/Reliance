// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.userprofile;

import com.reliance.yeticarpet.activity.userprofile.mvp.UserProfilePresenter;
import com.reliance.yeticarpet.activity.userprofile.mvp.UserProfileView;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserProfileActivity_MembersInjector implements MembersInjector<UserProfileActivity> {
  private final Provider<UserProfileView> userProfileViewProvider;

  private final Provider<UserProfilePresenter> userProfilePresenterProvider;

  public UserProfileActivity_MembersInjector(Provider<UserProfileView> userProfileViewProvider,
      Provider<UserProfilePresenter> userProfilePresenterProvider) {
    this.userProfileViewProvider = userProfileViewProvider;
    this.userProfilePresenterProvider = userProfilePresenterProvider;
  }

  public static MembersInjector<UserProfileActivity> create(
      Provider<UserProfileView> userProfileViewProvider,
      Provider<UserProfilePresenter> userProfilePresenterProvider) {
    return new UserProfileActivity_MembersInjector(userProfileViewProvider, userProfilePresenterProvider);
  }

  @Override
  public void injectMembers(UserProfileActivity instance) {
    injectUserProfileView(instance, userProfileViewProvider.get());
    injectUserProfilePresenter(instance, userProfilePresenterProvider.get());
  }

  @InjectedFieldSignature("com.reliance.yeticarpet.activity.userprofile.UserProfileActivity.userProfileView")
  public static void injectUserProfileView(UserProfileActivity instance,
      UserProfileView userProfileView) {
    instance.userProfileView = userProfileView;
  }

  @InjectedFieldSignature("com.reliance.yeticarpet.activity.userprofile.UserProfileActivity.userProfilePresenter")
  public static void injectUserProfilePresenter(UserProfileActivity instance,
      UserProfilePresenter userProfilePresenter) {
    instance.userProfilePresenter = userProfilePresenter;
  }
}
