// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.setting.di;

import com.reliance.yeticarpet.activity.setting.mvp.SettingModel;
import com.reliance.yeticarpet.activity.setting.mvp.SettingPresenter;
import com.reliance.yeticarpet.activity.setting.mvp.SettingView;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingModule_GetSettingPresenterFactory implements Factory<SettingPresenter> {
  private final SettingModule module;

  private final Provider<SettingModel> settingModelProvider;

  private final Provider<SettingView> settingViewProvider;

  public SettingModule_GetSettingPresenterFactory(SettingModule module,
      Provider<SettingModel> settingModelProvider, Provider<SettingView> settingViewProvider) {
    this.module = module;
    this.settingModelProvider = settingModelProvider;
    this.settingViewProvider = settingViewProvider;
  }

  @Override
  public SettingPresenter get() {
    return getSettingPresenter(module, settingModelProvider.get(), settingViewProvider.get());
  }

  public static SettingModule_GetSettingPresenterFactory create(SettingModule module,
      Provider<SettingModel> settingModelProvider, Provider<SettingView> settingViewProvider) {
    return new SettingModule_GetSettingPresenterFactory(module, settingModelProvider, settingViewProvider);
  }

  public static SettingPresenter getSettingPresenter(SettingModule instance,
      SettingModel settingModel, SettingView settingView) {
    return Preconditions.checkNotNullFromProvides(instance.getSettingPresenter(settingModel, settingView));
  }
}
