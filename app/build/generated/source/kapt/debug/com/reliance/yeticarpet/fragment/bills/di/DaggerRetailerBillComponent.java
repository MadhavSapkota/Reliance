// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.fragment.bills.di;

import com.reliance.yeticarpet.app.AppComponent;
import com.reliance.yeticarpet.app.Webservice;
import com.reliance.yeticarpet.dialog.CredentialsErrorDialog;
import com.reliance.yeticarpet.dialog.FilterDialog;
import com.reliance.yeticarpet.dialog.FiscalYearDialog;
import com.reliance.yeticarpet.dialog.NepaliDatePickerDialog;
import com.reliance.yeticarpet.dialog.NepaliToDatePickerDialog;
import com.reliance.yeticarpet.fragment.bills.RetailerBillFragment;
import com.reliance.yeticarpet.fragment.bills.RetailerBillFragment_MembersInjector;
import com.reliance.yeticarpet.fragment.bills.adapter.BillsAdapter;
import com.reliance.yeticarpet.fragment.bills.adapter.CustomSpinnerAdapter;
import com.reliance.yeticarpet.fragment.bills.adapter.StatusAdapter;
import com.reliance.yeticarpet.fragment.bills.mvp.RetailerBillModel;
import com.reliance.yeticarpet.fragment.bills.mvp.RetailerBillPresenter;
import com.reliance.yeticarpet.fragment.bills.mvp.RetailerBillView;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerRetailerBillComponent implements RetailerBillComponent {
  private final RetailerBillModule retailerBillModule;

  private final AppComponent appComponent;

  private Provider<BillsAdapter> getBillsAdapterProvider;

  private Provider<String> getErrorMessageProvider;

  private Provider<CredentialsErrorDialog> getCredentialErrorDialogProvider;

  private Provider<NepaliDatePickerDialog> getNepaliDatePickerDialogProvider;

  private Provider<FilterDialog> getBillSearchDialogProvider;

  private Provider<NepaliToDatePickerDialog> getNepaliToDatePickerDialogProvider;

  private Provider<StatusAdapter> getStatusAdapterProvider;

  private Provider<Webservice> webserviceProvider;

  private Provider<CustomSpinnerAdapter> getCustomSpinnerAdapterProvider;

  private Provider<FiscalYearDialog> getFiscalYearDialogProvider;

  private Provider<RetailerBillView> getRetailerBillViewProvider;

  private DaggerRetailerBillComponent(RetailerBillModule retailerBillModuleParam,
      AppComponent appComponentParam) {
    this.retailerBillModule = retailerBillModuleParam;
    this.appComponent = appComponentParam;
    initialize(retailerBillModuleParam, appComponentParam);
  }

  public static Builder builder() {
    return new Builder();
  }

  private RetailerBillModel retailerBillModel() {
    return RetailerBillModule_GetRetailerBillModelFactory.getRetailerBillModel(retailerBillModule, Preconditions.checkNotNullFromComponent(appComponent.webservice()));
  }

  private RetailerBillPresenter retailerBillPresenter() {
    return RetailerBillModule_GetRetailerBillPresenterFactory.getRetailerBillPresenter(retailerBillModule, getRetailerBillViewProvider.get(), retailerBillModel());
  }

  @SuppressWarnings("unchecked")
  private void initialize(final RetailerBillModule retailerBillModuleParam,
      final AppComponent appComponentParam) {
    this.getBillsAdapterProvider = RetailerBillModule_GetBillsAdapterFactory.create(retailerBillModuleParam);
    this.getErrorMessageProvider = RetailerBillModule_GetErrorMessageFactory.create(retailerBillModuleParam);
    this.getCredentialErrorDialogProvider = RetailerBillModule_GetCredentialErrorDialogFactory.create(retailerBillModuleParam, getErrorMessageProvider);
    this.getNepaliDatePickerDialogProvider = RetailerBillModule_GetNepaliDatePickerDialogFactory.create(retailerBillModuleParam);
    this.getBillSearchDialogProvider = RetailerBillModule_GetBillSearchDialogFactory.create(retailerBillModuleParam, getNepaliDatePickerDialogProvider);
    this.getNepaliToDatePickerDialogProvider = RetailerBillModule_GetNepaliToDatePickerDialogFactory.create(retailerBillModuleParam);
    this.getStatusAdapterProvider = RetailerBillModule_GetStatusAdapterFactory.create(retailerBillModuleParam);
    this.webserviceProvider = new com_reliance_yeticarpet_app_AppComponent_webservice(appComponentParam);
    this.getCustomSpinnerAdapterProvider = RetailerBillModule_GetCustomSpinnerAdapterFactory.create(retailerBillModuleParam);
    this.getFiscalYearDialogProvider = RetailerBillModule_GetFiscalYearDialogFactory.create(retailerBillModuleParam);
    this.getRetailerBillViewProvider = DoubleCheck.provider(RetailerBillModule_GetRetailerBillViewFactory.create(retailerBillModuleParam, getBillsAdapterProvider, getCredentialErrorDialogProvider, getBillSearchDialogProvider, getNepaliDatePickerDialogProvider, getNepaliToDatePickerDialogProvider, getStatusAdapterProvider, webserviceProvider, getCustomSpinnerAdapterProvider, getFiscalYearDialogProvider));
  }

  @Override
  public void inject(RetailerBillFragment retailerBillFragment) {
    injectRetailerBillFragment(retailerBillFragment);
  }

  private RetailerBillFragment injectRetailerBillFragment(RetailerBillFragment instance) {
    RetailerBillFragment_MembersInjector.injectDashboardView(instance, getRetailerBillViewProvider.get());
    RetailerBillFragment_MembersInjector.injectDashboardPresenter(instance, retailerBillPresenter());
    return instance;
  }

  public static final class Builder {
    private RetailerBillModule retailerBillModule;

    private AppComponent appComponent;

    private Builder() {
    }

    public Builder retailerBillModule(RetailerBillModule retailerBillModule) {
      this.retailerBillModule = Preconditions.checkNotNull(retailerBillModule);
      return this;
    }

    public Builder appComponent(AppComponent appComponent) {
      this.appComponent = Preconditions.checkNotNull(appComponent);
      return this;
    }

    public RetailerBillComponent build() {
      Preconditions.checkBuilderRequirement(retailerBillModule, RetailerBillModule.class);
      Preconditions.checkBuilderRequirement(appComponent, AppComponent.class);
      return new DaggerRetailerBillComponent(retailerBillModule, appComponent);
    }
  }

  private static final class com_reliance_yeticarpet_app_AppComponent_webservice implements Provider<Webservice> {
    private final AppComponent appComponent;

    com_reliance_yeticarpet_app_AppComponent_webservice(AppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public Webservice get() {
      return Preconditions.checkNotNullFromComponent(appComponent.webservice());
    }
  }
}
