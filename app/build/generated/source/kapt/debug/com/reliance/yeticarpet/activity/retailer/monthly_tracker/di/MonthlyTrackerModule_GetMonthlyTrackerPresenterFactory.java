// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.retailer.monthly_tracker.di;

import com.reliance.yeticarpet.activity.retailer.monthly_tracker.mvp.MonthlyTrackerModel;
import com.reliance.yeticarpet.activity.retailer.monthly_tracker.mvp.MonthlyTrackerPresenter;
import com.reliance.yeticarpet.activity.retailer.monthly_tracker.mvp.MonthlyTrackerView;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MonthlyTrackerModule_GetMonthlyTrackerPresenterFactory implements Factory<MonthlyTrackerPresenter> {
  private final MonthlyTrackerModule module;

  private final Provider<MonthlyTrackerModel> monthlyTrackerModelProvider;

  private final Provider<MonthlyTrackerView> monthlyTrackerViewProvider;

  public MonthlyTrackerModule_GetMonthlyTrackerPresenterFactory(MonthlyTrackerModule module,
      Provider<MonthlyTrackerModel> monthlyTrackerModelProvider,
      Provider<MonthlyTrackerView> monthlyTrackerViewProvider) {
    this.module = module;
    this.monthlyTrackerModelProvider = monthlyTrackerModelProvider;
    this.monthlyTrackerViewProvider = monthlyTrackerViewProvider;
  }

  @Override
  public MonthlyTrackerPresenter get() {
    return getMonthlyTrackerPresenter(module, monthlyTrackerModelProvider.get(), monthlyTrackerViewProvider.get());
  }

  public static MonthlyTrackerModule_GetMonthlyTrackerPresenterFactory create(
      MonthlyTrackerModule module, Provider<MonthlyTrackerModel> monthlyTrackerModelProvider,
      Provider<MonthlyTrackerView> monthlyTrackerViewProvider) {
    return new MonthlyTrackerModule_GetMonthlyTrackerPresenterFactory(module, monthlyTrackerModelProvider, monthlyTrackerViewProvider);
  }

  public static MonthlyTrackerPresenter getMonthlyTrackerPresenter(MonthlyTrackerModule instance,
      MonthlyTrackerModel monthlyTrackerModel, MonthlyTrackerView monthlyTrackerView) {
    return Preconditions.checkNotNullFromProvides(instance.getMonthlyTrackerPresenter(monthlyTrackerModel, monthlyTrackerView));
  }
}
