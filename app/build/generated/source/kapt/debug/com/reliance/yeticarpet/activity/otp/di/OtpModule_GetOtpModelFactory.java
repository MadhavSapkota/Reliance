// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.otp.di;

import com.reliance.yeticarpet.activity.otp.mvp.OtpModel;
import com.reliance.yeticarpet.app.Webservice;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OtpModule_GetOtpModelFactory implements Factory<OtpModel> {
  private final OtpModule module;

  private final Provider<Webservice> webserviceProvider;

  public OtpModule_GetOtpModelFactory(OtpModule module, Provider<Webservice> webserviceProvider) {
    this.module = module;
    this.webserviceProvider = webserviceProvider;
  }

  @Override
  public OtpModel get() {
    return getOtpModel(module, webserviceProvider.get());
  }

  public static OtpModule_GetOtpModelFactory create(OtpModule module,
      Provider<Webservice> webserviceProvider) {
    return new OtpModule_GetOtpModelFactory(module, webserviceProvider);
  }

  public static OtpModel getOtpModel(OtpModule instance, Webservice webservice) {
    return Preconditions.checkNotNullFromProvides(instance.getOtpModel(webservice));
  }
}
