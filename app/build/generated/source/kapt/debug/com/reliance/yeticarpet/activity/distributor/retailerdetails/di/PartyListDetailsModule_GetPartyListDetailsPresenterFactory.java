// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.activity.distributor.retailerdetails.di;

import com.reliance.yeticarpet.activity.distributor.retailerdetails.mvp.PartyListDetailsModel;
import com.reliance.yeticarpet.activity.distributor.retailerdetails.mvp.PartyListDetailsPresenter;
import com.reliance.yeticarpet.activity.distributor.retailerdetails.mvp.PartyListDetailsView;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PartyListDetailsModule_GetPartyListDetailsPresenterFactory implements Factory<PartyListDetailsPresenter> {
  private final PartyListDetailsModule module;

  private final Provider<PartyListDetailsModel> partyListDetailsModelProvider;

  private final Provider<PartyListDetailsView> partyListDetailsViewProvider;

  public PartyListDetailsModule_GetPartyListDetailsPresenterFactory(PartyListDetailsModule module,
      Provider<PartyListDetailsModel> partyListDetailsModelProvider,
      Provider<PartyListDetailsView> partyListDetailsViewProvider) {
    this.module = module;
    this.partyListDetailsModelProvider = partyListDetailsModelProvider;
    this.partyListDetailsViewProvider = partyListDetailsViewProvider;
  }

  @Override
  public PartyListDetailsPresenter get() {
    return getPartyListDetailsPresenter(module, partyListDetailsModelProvider.get(), partyListDetailsViewProvider.get());
  }

  public static PartyListDetailsModule_GetPartyListDetailsPresenterFactory create(
      PartyListDetailsModule module, Provider<PartyListDetailsModel> partyListDetailsModelProvider,
      Provider<PartyListDetailsView> partyListDetailsViewProvider) {
    return new PartyListDetailsModule_GetPartyListDetailsPresenterFactory(module, partyListDetailsModelProvider, partyListDetailsViewProvider);
  }

  public static PartyListDetailsPresenter getPartyListDetailsPresenter(
      PartyListDetailsModule instance, PartyListDetailsModel partyListDetailsModel,
      PartyListDetailsView partyListDetailsView) {
    return Preconditions.checkNotNullFromProvides(instance.getPartyListDetailsPresenter(partyListDetailsModel, partyListDetailsView));
  }
}
