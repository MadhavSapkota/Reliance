// Generated by Dagger (https://dagger.dev).
package com.reliance.yeticarpet.fragment.retailer.dashboard.di;

import com.reliance.yeticarpet.app.AppComponent;
import com.reliance.yeticarpet.dialog.CredentialsErrorDialog;
import com.reliance.yeticarpet.dialog.FiscalYearDialog;
import com.reliance.yeticarpet.fragment.retailer.dashboard.RetailerDashboardFragment;
import com.reliance.yeticarpet.fragment.retailer.dashboard.RetailerDashboardFragment_MembersInjector;
import com.reliance.yeticarpet.fragment.retailer.dashboard.adapter.RetailerDashboardAdapter;
import com.reliance.yeticarpet.fragment.retailer.dashboard.mvp.RetailerDashboardModel;
import com.reliance.yeticarpet.fragment.retailer.dashboard.mvp.RetailerDashboardPresenter;
import com.reliance.yeticarpet.fragment.retailer.dashboard.mvp.RetailerDashboardView;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerRetailerDashboardFragmentComponent implements RetailerDashboardFragmentComponent {
  private final RetailerDashboardFragmentModule retailerDashboardFragmentModule;

  private final AppComponent appComponent;

  private Provider<String> getErrorMessageProvider;

  private Provider<CredentialsErrorDialog> getCredentialErrorDialogProvider;

  private Provider<RetailerDashboardAdapter> getRetailerDashboardAdapterProvider;

  private Provider<FiscalYearDialog> getFiscalYearDialogProvider;

  private Provider<RetailerDashboardView> getRetailerDashboardViewProvider;

  private DaggerRetailerDashboardFragmentComponent(
      RetailerDashboardFragmentModule retailerDashboardFragmentModuleParam,
      AppComponent appComponentParam) {
    this.retailerDashboardFragmentModule = retailerDashboardFragmentModuleParam;
    this.appComponent = appComponentParam;
    initialize(retailerDashboardFragmentModuleParam, appComponentParam);
  }

  public static Builder builder() {
    return new Builder();
  }

  private RetailerDashboardModel retailerDashboardModel() {
    return RetailerDashboardFragmentModule_GetRetailerDashboardModelFactory.getRetailerDashboardModel(retailerDashboardFragmentModule, Preconditions.checkNotNullFromComponent(appComponent.webservice()));
  }

  private RetailerDashboardPresenter retailerDashboardPresenter() {
    return RetailerDashboardFragmentModule_GetRetailerDashboardPresenterFactory.getRetailerDashboardPresenter(retailerDashboardFragmentModule, getRetailerDashboardViewProvider.get(), retailerDashboardModel());
  }

  @SuppressWarnings("unchecked")
  private void initialize(
      final RetailerDashboardFragmentModule retailerDashboardFragmentModuleParam,
      final AppComponent appComponentParam) {
    this.getErrorMessageProvider = RetailerDashboardFragmentModule_GetErrorMessageFactory.create(retailerDashboardFragmentModuleParam);
    this.getCredentialErrorDialogProvider = RetailerDashboardFragmentModule_GetCredentialErrorDialogFactory.create(retailerDashboardFragmentModuleParam, getErrorMessageProvider);
    this.getRetailerDashboardAdapterProvider = RetailerDashboardFragmentModule_GetRetailerDashboardAdapterFactory.create(retailerDashboardFragmentModuleParam);
    this.getFiscalYearDialogProvider = RetailerDashboardFragmentModule_GetFiscalYearDialogFactory.create(retailerDashboardFragmentModuleParam);
    this.getRetailerDashboardViewProvider = DoubleCheck.provider(RetailerDashboardFragmentModule_GetRetailerDashboardViewFactory.create(retailerDashboardFragmentModuleParam, getCredentialErrorDialogProvider, getRetailerDashboardAdapterProvider, getFiscalYearDialogProvider));
  }

  @Override
  public void inject(RetailerDashboardFragment retailerDashboardFragment) {
    injectRetailerDashboardFragment(retailerDashboardFragment);
  }

  private RetailerDashboardFragment injectRetailerDashboardFragment(
      RetailerDashboardFragment instance) {
    RetailerDashboardFragment_MembersInjector.injectDashboardView(instance, getRetailerDashboardViewProvider.get());
    RetailerDashboardFragment_MembersInjector.injectDashboardPresenter(instance, retailerDashboardPresenter());
    return instance;
  }

  public static final class Builder {
    private RetailerDashboardFragmentModule retailerDashboardFragmentModule;

    private AppComponent appComponent;

    private Builder() {
    }

    public Builder retailerDashboardFragmentModule(
        RetailerDashboardFragmentModule retailerDashboardFragmentModule) {
      this.retailerDashboardFragmentModule = Preconditions.checkNotNull(retailerDashboardFragmentModule);
      return this;
    }

    public Builder appComponent(AppComponent appComponent) {
      this.appComponent = Preconditions.checkNotNull(appComponent);
      return this;
    }

    public RetailerDashboardFragmentComponent build() {
      Preconditions.checkBuilderRequirement(retailerDashboardFragmentModule, RetailerDashboardFragmentModule.class);
      Preconditions.checkBuilderRequirement(appComponent, AppComponent.class);
      return new DaggerRetailerDashboardFragmentComponent(retailerDashboardFragmentModule, appComponent);
    }
  }
}
